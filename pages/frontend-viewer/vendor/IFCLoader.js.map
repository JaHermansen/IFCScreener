{"version":3,"file":"IFCLoader.js","sources":["../src/IFC/BaseDefinitions.ts","../src/IFC/components/IFCModel.ts","../src/IFC/components/IFCParser.ts","../src/IFC/components/SubsetManager.ts","../src/IFC/components/properties/BasePropertyManager.ts","../src/IFC/components/IFCElementsMap.ts","../src/IFC/components/properties/WebIfcPropertyManager.ts","../src/IFC/components/IfcTypesMap.ts","../src/IFC/components/properties/JSONPropertyManager.ts","../src/IFC/components/properties/PropertyManager.ts","../src/IFC/components/TypeManager.ts","../src/IFC/components/BvhManager.ts","../src/IFC/components/ItemsHider.ts","../src/IFC/components/MemoryCleaner.ts","../src/IFC/web-workers/BaseDefinitions.ts","../src/IFC/web-workers/serializer/Vector.ts","../src/IFC/web-workers/serializer/IfcGeometry.ts","../src/IFC/web-workers/serializer/FlatMesh.ts","../src/IFC/web-workers/serializer/FlatMeshVector.ts","../src/IFC/web-workers/serializer/Material.ts","../src/IFC/web-workers/serializer/Geometry.ts","../src/IFC/web-workers/serializer/Mesh.ts","../src/IFC/web-workers/serializer/GeomsByMaterials.ts","../src/IFC/web-workers/serializer/Serializer.ts","../src/IFC/web-workers/handlers/PropertyHandler.ts","../src/IFC/web-workers/handlers/WebIfcHandler.ts","../src/IFC/web-workers/handlers/WorkerStateHandler.ts","../src/IFC/indexedDB/IndexedDatabase.ts","../src/IFC/web-workers/handlers/ParserHandler.ts","../src/IFC/web-workers/IFCWorkerHandler.ts","../src/IFC/components/IFCManager.ts","../src/IFCLoader.ts"],"sourcesContent":["import { BufferAttribute, BufferGeometry, Material, Mesh, Object3D } from 'three';\r\n// TODO: Remove ts ignore comments when @types/three gets updated\r\n// @ts-ignore\r\nimport { mergeBufferGeometries } from 'three/examples/jsm/utils/BufferGeometryUtils';\r\nimport {\r\n    FlatMesh,\r\n    IfcGeometry,\r\n    IFCRELAGGREGATES, IFCRELASSOCIATESMATERIAL,\r\n    IFCRELCONTAINEDINSPATIALSTRUCTURE,\r\n    IFCRELDEFINESBYPROPERTIES,\r\n    IFCRELDEFINESBYTYPE, LoaderError, LoaderSettings, RawLineData, Vector\r\n} from 'web-ifc';\r\nimport {ParserProgress} from \"./components/IFCParser\";\r\n\r\nexport const IdAttrName = 'expressID';\r\n\r\nexport type IdAttributeByMaterial = { [id: number]: number };\r\nexport type IdAttributesByMaterials = { [materialID: string]: IdAttributeByMaterial };\r\n\r\nexport const merge = (geoms: BufferGeometry[], createGroups = false) => {\r\n    // @ts-ignore\r\n    return mergeBufferGeometries(geoms, createGroups);\r\n};\r\n\r\nexport const newFloatAttr = (data: any[], size: number) => {\r\n    return new BufferAttribute(new Float32Array(data), size);\r\n};\r\n\r\nexport const newIntAttr = (data: any[], size: number) => {\r\n    return new BufferAttribute(new Uint32Array(data), size);\r\n};\r\n\r\n//TODO: Rename \"scene\" to \"parent\" in the next major release\r\nexport interface HighlightConfig {\r\n    scene: Object3D;\r\n    ids: number[];\r\n    removePrevious: boolean;\r\n    material?: Material;\r\n    customId?: string;\r\n}\r\n\r\nexport interface HighlightConfigOfModel extends HighlightConfig {\r\n    modelID: number;\r\n}\r\n\r\nexport const DEFAULT = 'default';\r\n\r\nexport type SelectedItems = {\r\n    [matID: string]: { ids: Set<number>; mesh: Mesh };\r\n};\r\n\r\nexport type MapFaceindexID = { [key: number]: number };\r\n\r\nexport type IdGeometries = {\r\n    [expressID: number]: BufferGeometry;\r\n};\r\n\r\nexport type GeometriesByMaterial = {\r\n    material: Material;\r\n    geometries: IdGeometries;\r\n};\r\n\r\nexport interface GeometriesByMaterials {\r\n    [materialID: string]: GeometriesByMaterial;\r\n}\r\n\r\nexport interface TypesMap {\r\n    [key: number]: number;\r\n}\r\n\r\nexport interface IfcModel {\r\n    modelID: number;\r\n    mesh: IfcMesh;\r\n    items: GeometriesByMaterials;\r\n    types: TypesMap;\r\n    jsonData: { [id: number]: JSONObject };\r\n}\r\n\r\nexport interface JSONObject {\r\n    expressID: number;\r\n    type: string;\r\n    [key: string]: any;\r\n}\r\n\r\nexport interface Worker {\r\n    active: boolean;\r\n    path: string;\r\n}\r\n\r\nexport interface IfcState {\r\n    models: { [modelID: number]: IfcModel };\r\n    api: WebIfcAPI;\r\n    useJSON: boolean;\r\n    worker: Worker;\r\n    webIfcSettings?: LoaderSettings;\r\n    onProgress?: (event: ParserProgress) => void;\r\n}\r\n\r\nexport interface IfcMesh extends Mesh {\r\n    modelID: number;\r\n}\r\n\r\nexport interface Node {\r\n    expressID: number;\r\n    type: string;\r\n    children: Node[];\r\n}\r\n\r\nexport interface pName {\r\n    name: number;\r\n    relating: string;\r\n    related: string;\r\n    key: string;\r\n}\r\n\r\nexport const PropsNames = {\r\n    aggregates: {\r\n        name: IFCRELAGGREGATES,\r\n        relating: 'RelatingObject',\r\n        related: 'RelatedObjects',\r\n        key: 'children'\r\n    },\r\n    spatial: {\r\n        name: IFCRELCONTAINEDINSPATIALSTRUCTURE,\r\n        relating: 'RelatingStructure',\r\n        related: 'RelatedElements',\r\n        key: 'children'\r\n    },\r\n    psets: {\r\n        name: IFCRELDEFINESBYPROPERTIES,\r\n        relating: 'RelatingPropertyDefinition',\r\n        related: 'RelatedObjects',\r\n        key: 'hasPsets'\r\n    },\r\n    materials: {\r\n        name: IFCRELASSOCIATESMATERIAL,\r\n        relating: 'RelatingMaterial',\r\n        related: 'RelatedObjects',\r\n        key: 'hasMaterial'\r\n    },\r\n    type: {\r\n        name: IFCRELDEFINESBYTYPE,\r\n        relating: 'RelatingType',\r\n        related: 'RelatedObjects',\r\n        key: 'hasType'\r\n    }\r\n};\r\n\r\nexport interface WebIfcAPI {\r\n\r\n    wasmModule: any;\r\n\r\n    Init(): void | Promise<void>;\r\n\r\n    // To close the web worker\r\n    Close?: () => void;\r\n\r\n    /**\r\n     * Opens a model and returns a modelID number\r\n     * @data Buffer containing IFC data (bytes)\r\n     * @data Settings settings for loading the model\r\n     */\r\n    OpenModel(data: string | Uint8Array, settings?: LoaderSettings): number | Promise<number>;\r\n\r\n    /**\r\n     * Creates a new model and returns a modelID number\r\n     * @data Settings settings for generating data the model\r\n     */\r\n    CreateModel(settings?: LoaderSettings): number | Promise<number>;\r\n\r\n    ExportFileAsIFC(modelID: number): Uint8Array | Promise<Uint8Array>;\r\n\r\n    /**\r\n     * Opens a model and returns a modelID number\r\n     * @modelID Model handle retrieved by OpenModel, model must not be closed\r\n     * @data Buffer containing IFC data (bytes)\r\n     */\r\n    GetGeometry(modelID: number, geometryExpressID: number): IfcGeometry | Promise<IfcGeometry>;\r\n\r\n    GetLine(modelID: number, expressID: number, flatten?: boolean):  any | Promise<any>;\r\n\r\n    GetAndClearErrors(modelID: number): Vector<LoaderError> | Promise<Vector<LoaderError>>;\r\n\r\n    WriteLine(modelID: number, lineObject: any): void | Promise<void>;\r\n\r\n    FlattenLine(modelID: number, line: any): void | Promise<void>;\r\n\r\n    GetRawLineData(modelID: number, expressID: number): RawLineData | Promise<RawLineData>;\r\n\r\n    WriteRawLineData(modelID: number, data: RawLineData):  any | Promise<any>;\r\n\r\n    GetLineIDsWithType(modelID: number, type: number): Vector<number> | Promise<Vector<number>>;\r\n\r\n    GetAllLines(modelID: Number): Vector<number> | Promise<Vector<number>>;\r\n\r\n    SetGeometryTransformation(modelID: number, transformationMatrix: Array<number>): void | Promise<void>;\r\n\r\n    GetCoordinationMatrix(modelID: number): Array<number> | Promise<Array<number>>;\r\n\r\n    GetVertexArray(ptr: number, size: number): Float32Array | Promise<Float32Array>;\r\n\r\n    GetIndexArray(ptr: number, size: number): Uint32Array | Promise<Uint32Array>;\r\n\r\n    getSubArray(heap: any, startPtr: any, sizeBytes: any): any | Promise<any>;\r\n\r\n    /**\r\n     * Closes a model and frees all related memory\r\n     * @modelID Model handle retrieved by OpenModel, model must not be closed\r\n     */\r\n    CloseModel(modelID: number): void | Promise<void>;\r\n\r\n    StreamAllMeshes(modelID: number, meshCallback: (mesh: FlatMesh) => void): void | Promise<void>;\r\n\r\n    StreamAllMeshesWithTypes(modelID: number, types: Array<number>, meshCallback: (mesh: FlatMesh) => void): void | Promise<void>;\r\n\r\n    /**\r\n     * Checks if a specific model ID is open or closed\r\n     * @modelID Model handle retrieved by OpenModel\r\n     */\r\n    IsModelOpen(modelID: number): boolean | Promise<boolean>;\r\n\r\n    /**\r\n     * Load all geometry in a model\r\n     * @modelID Model handle retrieved by OpenModel\r\n     */\r\n    LoadAllGeometry(modelID: number): Vector<FlatMesh> | Promise<Vector<FlatMesh>>;\r\n\r\n    /**\r\n     * Load geometry for a single element\r\n     * @modelID Model handle retrieved by OpenModel\r\n     */\r\n    GetFlatMesh(modelID: number, expressID: number): FlatMesh | Promise<FlatMesh>;\r\n\r\n    SetWasmPath(path: string): void | Promise<void>;\r\n}\r\n","import { BufferGeometry, Material, Mesh, Object3D, Scene } from 'three';\r\nimport { IFCManager } from './IFCManager';\r\nimport { HighlightConfig } from '../BaseDefinitions';\r\n\r\nlet modelIdCounter = 0;\r\nconst nullIfcManagerErrorMessage = 'IfcManager is null!';\r\n\r\n/**\r\n * Represents an IFC model. This object is returned by the `IFCLoader` after loading an IFC.\r\n * @geometry `THREE.Buffergeometry`, see Three.js documentation.\r\n * @materials `THREE.Material[]`, see Three.js documentation.\r\n * @manager contains all the logic to work with IFC.\r\n */\r\nexport class IFCModel extends Mesh {\r\n    modelID = modelIdCounter++;\r\n    ifcManager: IFCManager | null = null;\r\n\r\n    /**\r\n     * @deprecated `IfcModel` is already a mesh; you can place it in the scene directly.\r\n     */\r\n    mesh = this;\r\n\r\n    setIFCManager(manager: IFCManager) {\r\n        this.ifcManager = manager;\r\n    }\r\n\r\n    /**\r\n     * @deprecated Use `IfcModel.ifcManager.setWasmPath` instead.\r\n     *\r\n     * Sets the relative path of web-ifc.wasm file in the project.\r\n     * Beware: you **must** serve this file in your page; this means\r\n     * that you have to copy this files from *node_modules/web-ifc*\r\n     * to your deployment directory.\r\n     *\r\n     * If you don't use this methods,\r\n     * IFC.js assumes that you are serving it in the root directory.\r\n     *\r\n     * Example if web-ifc.wasm is in dist/wasmDir:\r\n     * `ifcLoader.setWasmPath(\"dist/wasmDir/\");`\r\n     *\r\n     * @path Relative path to web-ifc.wasm.\r\n     */\r\n    setWasmPath(path: string) {\r\n        if (this.ifcManager === null) throw new Error(nullIfcManagerErrorMessage);\r\n        this.ifcManager.setWasmPath(path);\r\n    }\r\n\r\n    /**\r\n     * @deprecated Use `IfcModel.ifcManager.close` instead.\r\n     *\r\n     * Closes the specified model and deletes it from the [scene](https://threejs.org/docs/#api/en/scenes/Scene).\r\n     * @scene Scene where the model is (if it's located in a scene).\r\n     */\r\n    close(scene?: Scene) {\r\n        if (this.ifcManager === null) throw new Error(nullIfcManagerErrorMessage);\r\n        this.ifcManager.close(this.modelID, scene);\r\n    }\r\n\r\n    /**\r\n     * @deprecated Use `IfcModel.ifcManager.getExpressId` instead.\r\n     *\r\n     * Gets the **Express ID** to which the given face belongs.\r\n     * This ID uniquely identifies this entity within this IFC file.\r\n     * @geometry The geometry of the IFC model.\r\n     * @faceIndex The index of the face of a geometry.You can easily get this index using the [Raycaster](https://threejs.org/docs/#api/en/core/Raycaster).\r\n     */\r\n    getExpressId(geometry: BufferGeometry, faceIndex: number) {\r\n        if (this.ifcManager === null) throw new Error(nullIfcManagerErrorMessage);\r\n        return this.ifcManager.getExpressId(geometry, faceIndex);\r\n    }\r\n\r\n    /**\r\n     * @deprecated Use `IfcModel.ifcManager.getAllItemsOfType` instead.\r\n     *\r\n     * Returns all items of the specified type. You can import\r\n     * the types from *web-ifc*.\r\n     *\r\n     * Example to get all the standard walls of a project:\r\n     * ```js\r\n     * import { IFCWALLSTANDARDCASE } from 'web-ifc';\r\n     * const walls = ifcLoader.getAllItemsOfType(IFCWALLSTANDARDCASE);\r\n     * ```\r\n     * @type The type of IFC items to get.\r\n     * @verbose If false (default), this only gets IDs. If true, this also gets the native properties of all the fetched items.\r\n     */\r\n    getAllItemsOfType(type: number, verbose: boolean) {\r\n        if (this.ifcManager === null) throw new Error(nullIfcManagerErrorMessage);\r\n        return this.ifcManager.getAllItemsOfType(this.modelID, type, verbose);\r\n    }\r\n\r\n    /**\r\n     * @deprecated Use `IfcModel.ifcManager.getItemProperties` instead.\r\n     *\r\n     * Gets the native properties of the given element.\r\n     * @id Express ID of the element.\r\n     * @recursive Wether you want to get the information of the referenced elements recursively.\r\n     */\r\n    getItemProperties(id: number, recursive = false) {\r\n        if (this.ifcManager === null) throw new Error(nullIfcManagerErrorMessage);\r\n        return this.ifcManager.getItemProperties(this.modelID, id, recursive);\r\n    }\r\n\r\n    /**\r\n     * @deprecated Use `IfcModel.ifcManager.getPropertySets` instead.\r\n     *\r\n     * Gets the [property sets](https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/schema/ifckernel/lexical/ifcpropertyset.htm)\r\n     * assigned to the given element.\r\n     * @id Express ID of the element.\r\n     * @recursive If true, this gets the native properties of the referenced elements recursively.\r\n     */\r\n    getPropertySets(id: number, recursive = false) {\r\n        if (this.ifcManager === null) throw new Error(nullIfcManagerErrorMessage);\r\n        return this.ifcManager.getPropertySets(this.modelID, id, recursive);\r\n    }\r\n\r\n    /**\r\n     * @deprecated Use `IfcModel.ifcManager.getTypeProperties` instead.\r\n     *\r\n     * Gets the properties of the type assigned to the element.\r\n     * For example, if applied to a wall (IfcWall), this would get back the information\r\n     * contained in the IfcWallType assigned to it, if any.\r\n     * @id Express ID of the element.\r\n     * @recursive If true, this gets the native properties of the referenced elements recursively.\r\n     */\r\n    getTypeProperties(id: number, recursive = false) {\r\n        if (this.ifcManager === null) throw new Error(nullIfcManagerErrorMessage);\r\n        return this.ifcManager.getTypeProperties(this.modelID, id, recursive);\r\n    }\r\n\r\n    /**\r\n     * @deprecated Use `IfcModel.ifcManager.getIfcType` instead.\r\n     *\r\n     * Gets the ifc type of the specified item.\r\n     * @id Express ID of the element.\r\n     */\r\n    getIfcType(id: number) {\r\n        if (this.ifcManager === null) throw new Error(nullIfcManagerErrorMessage);\r\n        return this.ifcManager.getIfcType(this.modelID, id);\r\n    }\r\n\r\n    /**\r\n     * @deprecated Use `IfcModel.ifcManager.getSpatialStructure` instead.\r\n     *\r\n     * Gets the spatial structure of the project. The\r\n     * [spatial structure](https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/schema/ifcproductextension/lexical/ifcspatialstructureelement.htm)\r\n     * is the hierarchical structure that organizes every IFC project (all physical items\r\n     * are referenced to an element of the spatial structure). It is formed by\r\n     * one IfcProject that contains one or more IfcSites, that contain one or more\r\n     * IfcBuildings, that contain one or more IfcBuildingStoreys, that contain\r\n     * one or more IfcSpaces.\r\n     */\r\n    getSpatialStructure() {\r\n        if (this.ifcManager === null) throw new Error(nullIfcManagerErrorMessage);\r\n        return this.ifcManager.getSpatialStructure(this.modelID);\r\n    }\r\n\r\n    /**\r\n     * @deprecated Use `IfcModel.ifcManager.getSubset` instead.\r\n     *\r\n     * Gets the mesh of the subset with the specified [material](https://threejs.org/docs/#api/en/materials/Material).\r\n     * If no material is given, this returns the subset with the original materials.\r\n     * @material Material assigned to the subset, if any.\r\n     */\r\n    getSubset(material?: Material) {\r\n        if (this.ifcManager === null) throw new Error(nullIfcManagerErrorMessage);\r\n        return this.ifcManager.getSubset(this.modelID, material);\r\n    }\r\n\r\n    /**\r\n     * @deprecated Use `IfcModel.ifcManager.removeSubset` instead.\r\n     *\r\n     * Removes the specified subset.\r\n     * @parent The parent where the subset is (can be any `THREE.Object3D`).\r\n     * @material Material assigned to the subset, if any.\r\n     */\r\n    removeSubset(parent?: Object3D, material?: Material) {\r\n        if (this.ifcManager === null) throw new Error(nullIfcManagerErrorMessage);\r\n        this.ifcManager.removeSubset(this.modelID, parent, material);\r\n    }\r\n\r\n    /**\r\n     * @deprecated Use `IfcModel.ifcManager.createSubset` instead.\r\n     *\r\n     * Creates a new geometric subset.\r\n     * @config A configuration object with the following options:\r\n     * - **scene**: `THREE.Object3D` where the model is located.\r\n     * - **ids**: Express IDs of the items of the model that will conform the subset.\r\n     * - **removePrevious**: Wether to remove the previous subset of this model with this material.\r\n     * - **material**: (optional) Wether to apply a material to the subset\r\n     */\r\n    createSubset(config: HighlightConfig) {\r\n        if (this.ifcManager === null) throw new Error(nullIfcManagerErrorMessage);\r\n        const modelConfig = { ...config, modelID: this.modelID };\r\n        return this.ifcManager.createSubset(modelConfig);\r\n    }\r\n\r\n    /**\r\n     * @deprecated Use `IfcModel.ifcManager.hideItems` instead.\r\n     *\r\n     * Hides the selected items in the specified model\r\n     * @ids Express ID of the elements.\r\n     */\r\n    hideItems(ids: number[]) {\r\n        if (this.ifcManager === null) throw new Error(nullIfcManagerErrorMessage);\r\n        this.ifcManager.hideItems(this.modelID, ids);\r\n    }\r\n\r\n    /**\r\n     * @deprecated Use `IfcModel.ifcManager.hideAllItems` instead.\r\n     *\r\n     * Hides all the items of the specified model\r\n     */\r\n    hideAllItems() {\r\n        if (this.ifcManager === null) throw new Error(nullIfcManagerErrorMessage);\r\n        this.ifcManager.hideAllItems(this.modelID);\r\n    }\r\n\r\n    /**\r\n     * @deprecated Use `IfcModel.ifcManager.showItems` instead.\r\n     *\r\n     * Hides all the items of the specified model\r\n     * @ids Express ID of the elements.\r\n     */\r\n    showItems(ids: number[]) {\r\n        if (this.ifcManager === null) throw new Error(nullIfcManagerErrorMessage);\r\n        this.ifcManager.showItems(this.modelID, ids);\r\n    }\r\n\r\n    /**\r\n     * @deprecated Use `IfcModel.ifcManager.showAllItems` instead.\r\n     *\r\n     * Shows all the items of the specified model\r\n     */\r\n    showAllItems() {\r\n        if (this.ifcManager === null) throw new Error(nullIfcManagerErrorMessage);\r\n        this.ifcManager.showAllItems(this.modelID);\r\n    }\r\n}\r\n","//@ts-ignore\r\nimport { PlacedGeometry, Color as ifcColor, IfcGeometry, IFCSPACE, FlatMesh, IFCOPENINGELEMENT } from 'web-ifc';\r\nimport {\r\n    IfcState,\r\n    IfcMesh,\r\n    IdAttrName,\r\n    merge,\r\n    newFloatAttr,\r\n    newIntAttr\r\n} from '../BaseDefinitions';\r\nimport {\r\n    Color,\r\n    MeshLambertMaterial,\r\n    DoubleSide,\r\n    Matrix4,\r\n    BufferGeometry,\r\n    BufferAttribute,\r\n    Material\r\n} from 'three';\r\nimport {BvhManager} from './BvhManager';\r\nimport {IFCModel} from './IFCModel';\r\n\r\nexport interface ParserProgress {\r\n    loaded: number;\r\n    total: number;\r\n}\r\n\r\nexport interface OptionalCategories {\r\n    [category: number]: boolean\r\n}\r\n\r\nexport interface ParserAPI {\r\n    parse(buffer: any): Promise<IFCModel>;\r\n\r\n    getAndClearErrors(_modelId: number): void;\r\n\r\n    setupOptionalCategories(config: OptionalCategories): void;\r\n}\r\n\r\n/**\r\n * Reads all the geometry of the IFC file and generates an optimized `THREE.Mesh`.\r\n */\r\nexport class IFCParser implements ParserAPI {\r\n    loadedModels = 0;\r\n\r\n    optionalCategories: OptionalCategories = {\r\n        [IFCSPACE]: true,\r\n        [IFCOPENINGELEMENT]: false\r\n    }\r\n\r\n    // Represents the index of the model in webIfcAPI\r\n    private currentWebIfcID = -1;\r\n    // When using JSON data for optimization, webIfcAPI is reinitialized every time a model is loaded\r\n    // This means that currentID is always 0, while currentModelID is the real index of stored models\r\n    private currentModelID = -1;\r\n\r\n    // BVH is optional because when using workers we have to apply it in the main thread,\r\n    // once the model has been serialized and reconstructed\r\n    constructor(private state: IfcState, private BVH?: BvhManager) {\r\n    }\r\n\r\n    async setupOptionalCategories(config: OptionalCategories) {\r\n        this.optionalCategories = config;\r\n    }\r\n\r\n    async parse(buffer: any) {\r\n        if (this.state.api.wasmModule === undefined) await this.state.api.Init();\r\n        await this.newIfcModel(buffer);\r\n        this.loadedModels++;\r\n        return this.loadAllGeometry();\r\n    }\r\n\r\n    getAndClearErrors(_modelId: number) {\r\n        // return this.state.api.GetAndClearErrors(modelId);\r\n    }\r\n\r\n    private notifyProgress(loaded: number, total: number) {\r\n        if (this.state.onProgress) this.state.onProgress({loaded, total});\r\n    }\r\n\r\n    private async newIfcModel(buffer: any) {\r\n        const data = new Uint8Array(buffer);\r\n        this.currentWebIfcID = await this.state.api.OpenModel(data, this.state.webIfcSettings);\r\n        this.currentModelID = this.state.useJSON ? this.loadedModels : this.currentWebIfcID;\r\n        this.state.models[this.currentModelID] = {\r\n            modelID: this.currentModelID,\r\n            mesh: {} as IfcMesh,\r\n            items: {},\r\n            types: {},\r\n            jsonData: {}\r\n        };\r\n    }\r\n\r\n    private async loadAllGeometry() {\r\n        await this.saveAllPlacedGeometriesByMaterial();\r\n        return this.generateAllGeometriesByMaterial();\r\n    }\r\n\r\n    private generateAllGeometriesByMaterial() {\r\n        const {geometry, materials} = this.getGeometryAndMaterials();\r\n        if(this.BVH) this.BVH.applyThreeMeshBVH(geometry);\r\n        const mesh = new IFCModel(geometry, materials);\r\n        mesh.modelID = this.currentModelID;\r\n        this.state.models[this.currentModelID].mesh = mesh;\r\n        return mesh;\r\n    }\r\n\r\n    private getGeometryAndMaterials() {\r\n        const items = this.state.models[this.currentModelID].items;\r\n        const mergedByMaterial: BufferGeometry[] = [];\r\n        const materials: Material[] = [];\r\n        for (let materialID in items) {\r\n            if (items.hasOwnProperty(materialID)) {\r\n                materials.push(items[materialID].material);\r\n                const geometries = Object.values(items[materialID].geometries);\r\n                mergedByMaterial.push(merge(geometries));\r\n            }\r\n        }\r\n        const geometry = merge(mergedByMaterial, true);\r\n        return {geometry, materials};\r\n    }\r\n\r\n    private async saveAllPlacedGeometriesByMaterial() {\r\n\r\n        await this.addOptionalCategories();\r\n\r\n        const flatMeshes = await this.state.api.LoadAllGeometry(this.currentWebIfcID);\r\n        const size = flatMeshes.size();\r\n        let counter = 0;\r\n        for (let i = 0; i < size; i++) {\r\n            if(i > counter) {\r\n                this.notifyProgress(i, size);\r\n                counter += Math.trunc(size / 10);\r\n            }\r\n            const flatMesh = flatMeshes.get(i);\r\n            const placedGeom = flatMesh.geometries;\r\n            for (let j = 0; j < placedGeom.size(); j++) {\r\n                await this.savePlacedGeometry(placedGeom.get(j), flatMesh.expressID);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Temporary: in the future everything will use StreamAllMeshes()\r\n    private async addOptionalCategories() {\r\n\r\n        const optionalTypes: number[] =[];\r\n\r\n        for(let key in this.optionalCategories) {\r\n            if(this.optionalCategories.hasOwnProperty(key)) {\r\n                const category = parseInt(key);\r\n                if(this.optionalCategories[category]) optionalTypes.push(category);\r\n            }\r\n        }\r\n\r\n        await this.state.api.StreamAllMeshesWithTypes(this.currentWebIfcID, optionalTypes, async (mesh: FlatMesh) => {\r\n            const geometries = mesh.geometries;\r\n            const size = geometries.size();\r\n            for (let j = 0; j < size; j++) {\r\n                await this.savePlacedGeometry(geometries.get(j), mesh.expressID);\r\n            }\r\n        });\r\n    }\r\n\r\n    private async savePlacedGeometry(placedGeometry: PlacedGeometry, id: number) {\r\n        const geometry = await this.getGeometry(placedGeometry);\r\n        this.saveGeometryByMaterial(geometry, placedGeometry, id);\r\n    }\r\n\r\n    private async getGeometry(placedGeometry: PlacedGeometry) {\r\n        const geometry = await this.getBufferGeometry(placedGeometry);\r\n        geometry.computeVertexNormals();\r\n        const matrix = IFCParser.getMeshMatrix(placedGeometry.flatTransformation);\r\n        geometry.applyMatrix4(matrix);\r\n        return geometry;\r\n    }\r\n\r\n    private async getBufferGeometry(placed: PlacedGeometry) {\r\n        const geometry = await this.state.api.GetGeometry(this.currentWebIfcID, placed.geometryExpressID);\r\n        const vertexData = await this.getVertices(geometry);\r\n        const indices = await this.getIndices(geometry);\r\n        const {vertices, normals} = IFCParser.extractVertexData(vertexData);\r\n        return IFCParser.ifcGeomToBufferGeom(vertices, normals, indices);\r\n    }\r\n\r\n    private async getVertices(geometry: IfcGeometry) {\r\n        const vData = geometry.GetVertexData();\r\n        const vDataSize = geometry.GetVertexDataSize();\r\n        return this.state.api.GetVertexArray(vData, vDataSize);\r\n    }\r\n\r\n    private async getIndices(geometry: IfcGeometry) {\r\n        const iData = geometry.GetIndexData();\r\n        const iDataSize = geometry.GetIndexDataSize();\r\n        return this.state.api.GetIndexArray(iData, iDataSize);\r\n    }\r\n\r\n    private static getMeshMatrix(matrix: number[]) {\r\n        const mat = new Matrix4();\r\n        mat.fromArray(matrix);\r\n        return mat;\r\n    }\r\n\r\n    private static ifcGeomToBufferGeom(vertices: any[], normals: any[], indexData: any) {\r\n        const geometry = new BufferGeometry();\r\n        geometry.setAttribute('position', newFloatAttr(vertices, 3));\r\n        geometry.setAttribute('normal', newFloatAttr(normals, 3));\r\n        geometry.setIndex(new BufferAttribute(indexData, 1));\r\n        return geometry;\r\n    }\r\n\r\n    private static extractVertexData(vertexData: any) {\r\n        const vertices = [];\r\n        const normals = [];\r\n        let isNormalData = false;\r\n        for (let i = 0; i < vertexData.length; i++) {\r\n            isNormalData ? normals.push(vertexData[i]) : vertices.push(vertexData[i]);\r\n            if ((i + 1) % 3 == 0) isNormalData = !isNormalData;\r\n        }\r\n        return {vertices, normals};\r\n    }\r\n\r\n    private saveGeometryByMaterial(geom: BufferGeometry, placedGeom: PlacedGeometry, id: number) {\r\n        const color = placedGeom.color;\r\n        const colorID = `${color.x}${color.y}${color.z}${color.w}`;\r\n        IFCParser.storeGeometryAttribute(id, geom);\r\n        this.createMaterial(colorID, color);\r\n        const item = this.state.models[this.currentModelID].items[colorID];\r\n        const currentGeom = item.geometries[id];\r\n        if (!currentGeom) return (item.geometries[id] = geom);\r\n        item.geometries[id] = merge([currentGeom, geom]);\r\n    }\r\n\r\n    private static storeGeometryAttribute(id: number, geometry: BufferGeometry) {\r\n        const size = geometry.attributes.position.count;\r\n        const idAttribute = new Array(size).fill(id);\r\n        geometry.setAttribute(IdAttrName, newIntAttr(idAttribute, 1));\r\n    }\r\n\r\n    private createMaterial(colorID: string, color: ifcColor) {\r\n        const items = this.state.models[this.currentModelID].items;\r\n        if (items[colorID]) return;\r\n        const col = new Color(color.x, color.y, color.z);\r\n        const newMaterial = new MeshLambertMaterial({color: col, side: DoubleSide});\r\n        newMaterial.transparent = color.w !== 1;\r\n        if (newMaterial.transparent) newMaterial.opacity = color.w;\r\n        items[colorID] = {material: newMaterial, geometries: {}};\r\n    }\r\n}\r\n","import { BufferGeometry, Material, Mesh, Object3D } from 'three';\r\nimport {\r\n    DEFAULT,\r\n    GeometriesByMaterials,\r\n    HighlightConfigOfModel,\r\n    IdGeometries,\r\n    IfcState,\r\n    merge,\r\n    SelectedItems\r\n} from '../BaseDefinitions';\r\nimport { BvhManager } from './BvhManager';\r\n\r\n\r\n/**\r\n * Contains the logic to get, create and delete geometric subsets of an IFC model. For example,\r\n * this can extract all the items in a specific IfcBuildingStorey and create a new Mesh.\r\n */\r\nexport class SubsetManager {\r\n    private state: IfcState;\r\n    private BVH: BvhManager;\r\n    private selected: SelectedItems = {};\r\n\r\n    constructor(state: IfcState, BVH: BvhManager) {\r\n        this.state = state;\r\n        this.BVH = BVH;\r\n    }\r\n\r\n    dispose() {\r\n        // @ts-ignore\r\n        // this.BVH = null;\r\n        // const items = Object.values(this.selected);\r\n        // items.forEach(item => {\r\n        //     const mesh = item.mesh;\r\n        //     mesh.geometry.dispose();\r\n        //     Array.isArray(mesh.material) ?\r\n        //         mesh.material.forEach(mat => mat.dispose()) :\r\n        //         mesh.material.dispose();\r\n        // });\r\n        // this.selected = {};\r\n    }\r\n\r\n    getSubset(modelID: number, material?: Material, customId?: string) {\r\n        const currentMat = this.matIDNoConfig(modelID, material, customId);\r\n        return this.selected[currentMat].mesh || null;\r\n    }\r\n\r\n    removeSubset(modelID: number, parent?: Object3D, material?: Material, customId?: string) {\r\n        const currentMat = this.matIDNoConfig(modelID, material, customId);\r\n        if (!this.selected[currentMat]) return;\r\n        if (parent) parent.remove(this.selected[currentMat].mesh);\r\n\r\n        // const mesh = this.selected[currentMat].mesh;\r\n        // mesh.geometry.dispose();\r\n        // mesh.geometry = {} as any;\r\n        //\r\n        // if(!Array.isArray(mesh.material)) mesh.material.dispose();\r\n        // else mesh.material.forEach(mat => mat.dispose());\r\n        // mesh.material = {} as any;\r\n\r\n        delete this.selected[currentMat];\r\n    }\r\n\r\n    createSubset(config: HighlightConfigOfModel) {\r\n        this.checkConfigValid(config);\r\n        if (this.isPreviousSelection(config)) return;\r\n        if (this.isEasySelection(config)) return this.addToPreviousSelection(config);\r\n        this.updatePreviousSelection(config.scene, config);\r\n        return this.createSelectionInScene(config);\r\n    }\r\n\r\n    private createSelectionInScene(config: HighlightConfigOfModel) {\r\n        const filtered = this.filter(config);\r\n        const { geomsByMaterial, materials } = this.getGeomAndMat(filtered);\r\n        if (geomsByMaterial.length <= 0) return null;\r\n        const isDefMaterial = this.isDefaultMat(config);\r\n        const geometry = this.getMergedGeometry(geomsByMaterial, isDefMaterial);\r\n        const mats = isDefMaterial ? materials : config.material;\r\n        this.BVH.applyThreeMeshBVH(geometry);\r\n        //@ts-ignore\r\n        const mesh = new Mesh(geometry, mats);\r\n        this.selected[this.matID(config)].mesh = mesh;\r\n        //@ts-ignore\r\n        mesh.modelID = config.modelID;\r\n        config.scene.add(mesh);\r\n        return mesh;\r\n    }\r\n\r\n    private getMergedGeometry(geomsByMaterial: BufferGeometry[], hasDefaultMaterial: boolean) {\r\n        return geomsByMaterial.length > 0\r\n            ? merge(geomsByMaterial, hasDefaultMaterial)\r\n            : new BufferGeometry();\r\n    }\r\n\r\n    private checkConfigValid(config: HighlightConfigOfModel) {\r\n        this.checkValidConfigParam(config.scene);\r\n        this.checkValidConfigParam(config.modelID);\r\n        this.checkValidConfigParam(config.ids);\r\n        this.checkValidConfigParam(config.removePrevious);\r\n        if (config.ids.length <= 0) {\r\n            throw new Error('Error: config parameter ids cannot be empty');\r\n        }\r\n    }\r\n\r\n    private checkValidConfigParam(item: any) {\r\n        if (item === undefined || item === null) throw new Error(`Error with subset config parameter: ${item}`);\r\n    }\r\n\r\n    private getGeomAndMat(filtered: GeometriesByMaterials) {\r\n        const geomsByMaterial: BufferGeometry[] = [];\r\n        const materials: Material[] = [];\r\n        for (let matID in filtered) {\r\n            let geoms = Object.values(filtered[matID].geometries);\r\n            geoms = geoms.filter(geom => Object.values(geom.attributes).length > 0);\r\n            if (!geoms.length) continue;\r\n            materials.push(filtered[matID].material);\r\n            if (geoms.length > 1) geomsByMaterial.push(merge(geoms));\r\n            else geomsByMaterial.push(...geoms);\r\n        }\r\n        return { geomsByMaterial, materials };\r\n    }\r\n\r\n    private updatePreviousSelection(parent: Object3D, config: HighlightConfigOfModel) {\r\n        const previous = this.selected[this.matID(config)];\r\n        if (!previous) return this.newSelectionGroup(config);\r\n        parent.remove(previous.mesh);\r\n        config.removePrevious\r\n            ? (previous.ids = new Set(config.ids))\r\n            : config.ids.forEach((id) => previous.ids.add(id));\r\n    }\r\n\r\n    private newSelectionGroup(config: HighlightConfigOfModel) {\r\n        this.selected[this.matID(config)] = {\r\n            ids: new Set(config.ids),\r\n            mesh: {} as Mesh\r\n        };\r\n    }\r\n\r\n    private isPreviousSelection(config: HighlightConfigOfModel) {\r\n        if (!this.selected[this.matID(config)]) return false;\r\n        if (this.containsIds(config)) return true;\r\n        const previousIds = this.selected[this.matID(config)].ids;\r\n        return JSON.stringify(config.ids) === JSON.stringify(previousIds);\r\n    }\r\n\r\n    private containsIds(config: HighlightConfigOfModel) {\r\n        const newIds = config.ids;\r\n        const previous = Array.from(this.selected[this.matID(config)].ids);\r\n        // prettier-ignore\r\n        //@ts-ignore\r\n        return newIds.every((i => v => (i = previous.indexOf(v, i) + 1))(0));\r\n    }\r\n\r\n    private addToPreviousSelection(config: HighlightConfigOfModel) {\r\n        const previous = this.selected[this.matID(config)];\r\n        const filtered = this.filter(config, new Set(config.ids));\r\n        // @ts-ignore\r\n        // prettier-ignore\r\n        const geometries = Object.values(filtered).map((i) => Object.values(i.geometries)).flat();\r\n        const previousGeom = previous.mesh.geometry;\r\n        previous.mesh.geometry = merge([previousGeom, ...geometries]);\r\n        config.ids.forEach((id) => previous.ids.add(id));\r\n    }\r\n\r\n    private filter(config: HighlightConfigOfModel, itemsID?: Set<number>) {\r\n        const ids = itemsID || this.selected[this.matID(config)].ids;\r\n        const items = this.state.models[config.modelID].items;\r\n        const filtered: GeometriesByMaterials = {};\r\n        for (let matID in items) {\r\n            filtered[matID] = {\r\n                material: items[matID].material,\r\n                geometries: this.filterGeometries(ids, items[matID].geometries)\r\n            };\r\n        }\r\n        return filtered;\r\n    }\r\n\r\n    private filterGeometries(selectedIDs: Set<number>, geometries: IdGeometries) {\r\n        const ids = Array.from(selectedIDs);\r\n        return Object.keys(geometries)\r\n            .filter((key) => ids.includes(parseInt(key, 10)))\r\n            .reduce((obj, key) => {\r\n                //@ts-ignore\r\n                return { ...obj, [key]: geometries[key] };\r\n            }, {});\r\n    }\r\n\r\n    private isEasySelection(config: HighlightConfigOfModel) {\r\n        const matID = this.matID(config);\r\n        if (!config.removePrevious && !this.isDefaultMat(config) && this.selected[matID]) return true;\r\n    }\r\n\r\n    private isDefaultMat(config: HighlightConfigOfModel) {\r\n        const id = this.matIDNoConfig(config.modelID, undefined, config.customId);\r\n        const id2 = this.matID(config);\r\n        return id === id2;\r\n    }\r\n\r\n    private matID(config: HighlightConfigOfModel) {\r\n        let name;\r\n        if (!config.material) name = DEFAULT;\r\n        else name = config.material.uuid;\r\n        name += ' - ' + (config.customId || \"\");\r\n        return name.concat(' - ').concat(config.modelID.toString());\r\n    }\r\n\r\n    private matIDNoConfig(modelID: number, material?: Material, customId = \"\") {\r\n        let name = DEFAULT;\r\n        if (material) name = material.uuid;\r\n        name += ' - ' + customId;\r\n        return name.concat(' - ').concat(modelID.toString());\r\n    }\r\n}\r\n","import { IfcState, pName, PropsNames, Node } from '../../BaseDefinitions';\r\n\r\nexport class BasePropertyManager {\r\n\r\n    constructor(protected state: IfcState) {\r\n    }\r\n\r\n    async getPropertySets(modelID: number, elementID: number, recursive = false) {\r\n        return await this.getProperty(modelID, elementID, recursive, PropsNames.psets);\r\n    }\r\n\r\n    async getTypeProperties(modelID: number, elementID: number, recursive = false) {\r\n        return await this.getProperty(modelID, elementID, recursive, PropsNames.type);\r\n    }\r\n\r\n    async getMaterialsProperties(modelID: number, elementID: number, recursive = false) {\r\n        return await this.getProperty(modelID, elementID, recursive, PropsNames.materials);\r\n    }\r\n\r\n    protected async getSpatialNode(modelID: number, node: Node, treeChunks: any, includeProperties?: boolean) {\r\n        await this.getChildren(modelID, node, treeChunks, PropsNames.aggregates, includeProperties);\r\n        await this.getChildren(modelID, node, treeChunks, PropsNames.spatial, includeProperties);\r\n    }\r\n\r\n    protected async getChildren(modelID: number, node: Node, treeChunks: any, propNames: pName, includeProperties?: boolean) {\r\n        const children = treeChunks[node.expressID];\r\n        if (children == undefined) return;\r\n        const prop = propNames.key as keyof Node;\r\n        const nodes: any[] = [];\r\n        for(let i = 0; i < children.length; i++){\r\n            const child = children[i];\r\n            let node = this.newNode(modelID, child);\r\n            if (includeProperties) {\r\n                const properties = await this.getItemProperties(modelID, node.expressID) as any;\r\n                node = { ...node, ...properties };\r\n            }\r\n            await this.getSpatialNode(modelID, node, treeChunks, includeProperties);\r\n            nodes.push(node);\r\n        }\r\n        (node[prop] as Node[]) = nodes;\r\n    }\r\n\r\n    protected newNode(modelID: number, id: number) {\r\n        const typeName = this.getNodeType(modelID, id);\r\n        return {\r\n            expressID: id,\r\n            type: typeName,\r\n            children: []\r\n        };\r\n    }\r\n\r\n    protected async getSpatialTreeChunks(modelID: number) {\r\n        const treeChunks: any = {};\r\n        await this.getChunks(modelID, treeChunks, PropsNames.aggregates);\r\n        await this.getChunks(modelID, treeChunks, PropsNames.spatial);\r\n        return treeChunks;\r\n    }\r\n\r\n    protected saveChunk(chunks: any, propNames: pName, rel: any) {\r\n        const relating = rel[propNames.relating].value;\r\n        const related = rel[propNames.related].map((r: any) => r.value);\r\n        if (chunks[relating] == undefined) {\r\n            chunks[relating] = related;\r\n        } else {\r\n            chunks[relating] = chunks[relating].concat(related);\r\n        }\r\n    }\r\n\r\n    protected getRelated(rel: any, propNames: pName, IDs: number[]) {\r\n        const element = rel[propNames.relating];\r\n        if (!Array.isArray(element)) IDs.push(element.value);\r\n        else element.forEach((ele) => IDs.push(ele.value));\r\n    }\r\n\r\n    protected static isRelated(id: number, rel: any, propNames: pName) {\r\n        const relatedItems = rel[propNames.related];\r\n        if (Array.isArray(relatedItems)) {\r\n            const values = relatedItems.map((item) => item.value);\r\n            return values.includes(id);\r\n        }\r\n        return relatedItems.value === id;\r\n    }\r\n\r\n    protected static newIfcProject(id: number) {\r\n        return {\r\n            expressID: id,\r\n            type: 'IFCPROJECT',\r\n            children: []\r\n        };\r\n    }\r\n\r\n    async getProperty(modelID: number, elementID: number, recursive = false, propName: pName): Promise<any> {\r\n    }\r\n\r\n    protected async getChunks(modelID: number, chunks: any, propNames: pName): Promise<void> {\r\n    }\r\n\r\n    protected async getItemProperties(modelID: number, expressID: number, recursive = false): Promise<any> {\r\n    }\r\n\r\n    protected getNodeType(modelID: number, id: number): any {\r\n    }\r\n}","export const IfcElements: {[key: number]: string} = {\r\n  103090709: 'IFCPROJECT',\r\n  4097777520: 'IFCSITE',\r\n  4031249490: 'IFCBUILDING',\r\n  3124254112: 'IFCBUILDINGSTOREY',\r\n  3856911033: 'IFCSPACE',\r\n  1674181508: 'IFCANNOTATION',\r\n  25142252: 'IFCCONTROLLER',\r\n  32344328: 'IFCBOILER',\r\n  76236018: 'IFCLAMP',\r\n  90941305: 'IFCPUMP',\r\n  177149247: 'IFCAIRTERMINALBOX',\r\n  182646315: 'IFCFLOWINSTRUMENT',\r\n  263784265: 'IFCFURNISHINGELEMENT',\r\n  264262732: 'IFCELECTRICGENERATOR',\r\n  277319702: 'IFCAUDIOVISUALAPPLIANCE',\r\n  310824031: 'IFCPIPEFITTING',\r\n  331165859: 'IFCSTAIR',\r\n  342316401: 'IFCDUCTFITTING',\r\n  377706215: 'IFCMECHANICALFASTENER',\r\n  395920057: 'IFCDOOR',\r\n  402227799: 'IFCELECTRICMOTOR',\r\n  413509423: 'IFCSYSTEMFURNITUREELEMENT',\r\n  484807127: 'IFCEVAPORATOR',\r\n  486154966: 'IFCWINDOWSTANDARDCASE',\r\n  629592764: 'IFCLIGHTFIXTURE',\r\n  630975310: 'IFCUNITARYCONTROLELEMENT',\r\n  635142910: 'IFCCABLECARRIERFITTING',\r\n  639361253: 'IFCCOIL',\r\n  647756555: 'IFCFASTENER',\r\n  707683696: 'IFCFLOWSTORAGEDEVICE',\r\n  738039164: 'IFCPROTECTIVEDEVICE',\r\n  753842376: 'IFCBEAM',\r\n  812556717: 'IFCTANK',\r\n  819412036: 'IFCFILTER',\r\n  843113511: 'IFCCOLUMN',\r\n  862014818: 'IFCELECTRICDISTRIBUTIONBOARD',\r\n  900683007: 'IFCFOOTING',\r\n  905975707: 'IFCCOLUMNSTANDARDCASE',\r\n  926996030: 'IFCVOIDINGFEATURE',\r\n  979691226: 'IFCREINFORCINGBAR',\r\n  987401354: 'IFCFLOWSEGMENT',\r\n  1003880860: 'IFCELECTRICTIMECONTROL',\r\n  1051757585: 'IFCCABLEFITTING',\r\n  1052013943: 'IFCDISTRIBUTIONCHAMBERELEMENT',\r\n  1062813311: 'IFCDISTRIBUTIONCONTROLELEMENT',\r\n  1073191201: 'IFCMEMBER',\r\n  1095909175: 'IFCBUILDINGELEMENTPROXY',\r\n  1156407060: 'IFCPLATESTANDARDCASE',\r\n  1162798199: 'IFCSWITCHINGDEVICE',\r\n  1329646415: 'IFCSHADINGDEVICE',\r\n  1335981549: 'IFCDISCRETEACCESSORY',\r\n  1360408905: 'IFCDUCTSILENCER',\r\n  1404847402: 'IFCSTACKTERMINAL',\r\n  1426591983: 'IFCFIRESUPPRESSIONTERMINAL',\r\n  1437502449: 'IFCMEDICALDEVICE',\r\n  1509553395: 'IFCFURNITURE',\r\n  1529196076: 'IFCSLAB',\r\n  1620046519: 'IFCTRANSPORTELEMENT',\r\n  1634111441: 'IFCAIRTERMINAL',\r\n  1658829314: 'IFCENERGYCONVERSIONDEVICE',\r\n  1677625105: 'IFCCIVILELEMENT',\r\n  1687234759: 'IFCPILE',\r\n  1904799276: 'IFCELECTRICAPPLIANCE',\r\n  1911478936: 'IFCMEMBERSTANDARDCASE',\r\n  1945004755: 'IFCDISTRIBUTIONELEMENT',\r\n  1973544240: 'IFCCOVERING',\r\n  1999602285: 'IFCSPACEHEATER',\r\n  2016517767: 'IFCROOF',\r\n  2056796094: 'IFCAIRTOAIRHEATRECOVERY',\r\n  2058353004: 'IFCFLOWCONTROLLER',\r\n  2068733104: 'IFCHUMIDIFIER',\r\n  2176052936: 'IFCJUNCTIONBOX',\r\n  2188021234: 'IFCFLOWMETER',\r\n  2223149337: 'IFCFLOWTERMINAL',\r\n  2262370178: 'IFCRAILING',\r\n  2272882330: 'IFCCONDENSER',\r\n  2295281155: 'IFCPROTECTIVEDEVICETRIPPINGUNIT',\r\n  2320036040: 'IFCREINFORCINGMESH',\r\n  2347447852: 'IFCTENDONANCHOR',\r\n  2391383451: 'IFCVIBRATIONISOLATOR',\r\n  2391406946: 'IFCWALL',\r\n  2474470126: 'IFCMOTORCONNECTION',\r\n  2769231204: 'IFCVIRTUALELEMENT',\r\n  2814081492: 'IFCENGINE',\r\n  2906023776: 'IFCBEAMSTANDARDCASE',\r\n  2938176219: 'IFCBURNER',\r\n  2979338954: 'IFCBUILDINGELEMENTPART',\r\n  3024970846: 'IFCRAMP',\r\n  3026737570: 'IFCTUBEBUNDLE',\r\n  3027962421: 'IFCSLABSTANDARDCASE',\r\n  3040386961: 'IFCDISTRIBUTIONFLOWELEMENT',\r\n  3053780830: 'IFCSANITARYTERMINAL',\r\n  3079942009: 'IFCOPENINGSTANDARDCASE',\r\n  3087945054: 'IFCALARM',\r\n  3101698114: 'IFCSURFACEFEATURE',\r\n  3127900445: 'IFCSLABELEMENTEDCASE',\r\n  3132237377: 'IFCFLOWMOVINGDEVICE',\r\n  3171933400: 'IFCPLATE',\r\n  3221913625: 'IFCCOMMUNICATIONSAPPLIANCE',\r\n  3242481149: 'IFCDOORSTANDARDCASE',\r\n  3283111854: 'IFCRAMPFLIGHT',\r\n  3296154744: 'IFCCHIMNEY',\r\n  3304561284: 'IFCWINDOW',\r\n  3310460725: 'IFCELECTRICFLOWSTORAGEDEVICE',\r\n  3319311131: 'IFCHEATEXCHANGER',\r\n  3415622556: 'IFCFAN',\r\n  3420628829: 'IFCSOLARDEVICE',\r\n  3493046030: 'IFCGEOGRAPHICELEMENT',\r\n  3495092785: 'IFCCURTAINWALL',\r\n  3508470533: 'IFCFLOWTREATMENTDEVICE',\r\n  3512223829: 'IFCWALLSTANDARDCASE',\r\n  3518393246: 'IFCDUCTSEGMENT',\r\n  3571504051: 'IFCCOMPRESSOR',\r\n  3588315303: 'IFCOPENINGELEMENT',\r\n  3612865200: 'IFCPIPESEGMENT',\r\n  3640358203: 'IFCCOOLINGTOWER',\r\n  3651124850: 'IFCPROJECTIONELEMENT',\r\n  3694346114: 'IFCOUTLET',\r\n  3747195512: 'IFCEVAPORATIVECOOLER',\r\n  3758799889: 'IFCCABLECARRIERSEGMENT',\r\n  3824725483: 'IFCTENDON',\r\n  3825984169: 'IFCTRANSFORMER',\r\n  3902619387: 'IFCCHILLER',\r\n  4074379575: 'IFCDAMPER',\r\n  4086658281: 'IFCSENSOR',\r\n  4123344466: 'IFCELEMENTASSEMBLY',\r\n  4136498852: 'IFCCOOLEDBEAM',\r\n  4156078855: 'IFCWALLELEMENTEDCASE',\r\n  4175244083: 'IFCINTERCEPTOR',\r\n  4207607924: 'IFCVALVE',\r\n  4217484030: 'IFCCABLESEGMENT',\r\n  4237592921: 'IFCWASTETERMINAL',\r\n  4252922144: 'IFCSTAIRFLIGHT',\r\n  4278956645: 'IFCFLOWFITTING',\r\n  4288193352: 'IFCACTUATOR',\r\n  4292641817: 'IFCUNITARYEQUIPMENT',\r\n  3009204131: 'IFCGRID'\r\n};\r\n","import { BasePropertyManager } from './BasePropertyManager';\r\nimport { IFCPROJECT } from 'web-ifc';\r\nimport { pName } from '../../BaseDefinitions';\r\nimport { PropertyAPI } from './BaseDefinitions';\r\nimport { IfcElements } from '../IFCElementsMap';\r\n\r\nexport class WebIfcPropertyManager extends BasePropertyManager  implements PropertyAPI {\r\n    async getItemProperties(modelID: number, id: number, recursive = false) {\r\n        return this.state.api.GetLine(modelID, id, recursive);\r\n    }\r\n\r\n    async getSpatialStructure(modelID: number, includeProperties?: boolean) {\r\n        const chunks = await this.getSpatialTreeChunks(modelID);\r\n        const allLines = await this.state.api.GetLineIDsWithType(modelID, IFCPROJECT);\r\n        const projectID = allLines.get(0);\r\n        const project = WebIfcPropertyManager.newIfcProject(projectID);\r\n        await this.getSpatialNode(modelID, project, chunks, includeProperties);\r\n        return project;\r\n    }\r\n\r\n    async getAllItemsOfType(modelID: number, type: number, verbose: boolean) {\r\n        let items: number[] = [];\r\n        const lines = await this.state.api.GetLineIDsWithType(modelID, type);\r\n        for (let i = 0; i < lines.size(); i++) items.push(lines.get(i));\r\n        if (!verbose) return items;\r\n        const result: any[] = [];\r\n        for (let i = 0; i < items.length; i++) {\r\n            result.push(await this.state.api.GetLine(modelID, items[i]));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    override async getProperty(modelID: number, elementID: number, recursive = false, propName: pName) {\r\n        const propSetIds = await this.getAllRelatedItemsOfType(modelID, elementID, propName);\r\n        const result: any[] = [];\r\n        for (let i = 0; i < propSetIds.length; i++) {\r\n            result.push(await this.state.api.GetLine(modelID, propSetIds[i], recursive));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    protected override getNodeType(modelID: number, id: number) {\r\n        const typeID = this.state.models[modelID].types[id];\r\n        return IfcElements[typeID];\r\n    }\r\n\r\n    protected override async getChunks(modelID: number, chunks: any, propNames: pName) {\r\n        const relation = await this.state.api.GetLineIDsWithType(modelID, propNames.name);\r\n        for (let i = 0; i < relation.size(); i++) {\r\n            const rel = await this.state.api.GetLine(modelID, relation.get(i), false);\r\n            this.saveChunk(chunks, propNames, rel);\r\n        }\r\n    }\r\n\r\n    private async getAllRelatedItemsOfType(modelID: number, id: number, propNames: pName) {\r\n        const lines = await this.state.api.GetLineIDsWithType(modelID, propNames.name);\r\n        const IDs: number[] = [];\r\n        for (let i = 0; i < lines.size(); i++) {\r\n            const rel = await this.state.api.GetLine(modelID, lines.get(i));\r\n            const isRelated = BasePropertyManager.isRelated(id, rel, propNames);\r\n            if (isRelated) this.getRelated(rel, propNames, IDs);\r\n        }\r\n        return IDs;\r\n    }\r\n}","export const IfcTypesMap:  {[key: number]: string} = {\r\n    3821786052: \"IFCACTIONREQUEST\",\r\n    2296667514: \"IFCACTOR\",\r\n    3630933823: \"IFCACTORROLE\",\r\n    4288193352: \"IFCACTUATOR\",\r\n    2874132201: \"IFCACTUATORTYPE\",\r\n    618182010: \"IFCADDRESS\",\r\n    1635779807: \"IFCADVANCEDBREP\",\r\n    2603310189: \"IFCADVANCEDBREPWITHVOIDS\",\r\n    3406155212: \"IFCADVANCEDFACE\",\r\n    1634111441: \"IFCAIRTERMINAL\",\r\n    177149247: \"IFCAIRTERMINALBOX\",\r\n    1411407467: \"IFCAIRTERMINALBOXTYPE\",\r\n    3352864051: \"IFCAIRTERMINALTYPE\",\r\n    2056796094: \"IFCAIRTOAIRHEATRECOVERY\",\r\n    1871374353: \"IFCAIRTOAIRHEATRECOVERYTYPE\",\r\n    3087945054: \"IFCALARM\",\r\n    3001207471: \"IFCALARMTYPE\",\r\n    325726236: \"IFCALIGNMENT\",\r\n    749761778: \"IFCALIGNMENT2DHORIZONTAL\",\r\n    3199563722: \"IFCALIGNMENT2DHORIZONTALSEGMENT\",\r\n    2483840362: \"IFCALIGNMENT2DSEGMENT\",\r\n    3379348081: \"IFCALIGNMENT2DVERSEGCIRCULARARC\",\r\n    3239324667: \"IFCALIGNMENT2DVERSEGLINE\",\r\n    4263986512: \"IFCALIGNMENT2DVERSEGPARABOLICARC\",\r\n    53199957: \"IFCALIGNMENT2DVERTICAL\",\r\n    2029264950: \"IFCALIGNMENT2DVERTICALSEGMENT\",\r\n    3512275521: \"IFCALIGNMENTCURVE\",\r\n    1674181508: \"IFCANNOTATION\",\r\n    669184980: \"IFCANNOTATIONFILLAREA\",\r\n    639542469: \"IFCAPPLICATION\",\r\n    411424972: \"IFCAPPLIEDVALUE\",\r\n    130549933: \"IFCAPPROVAL\",\r\n    3869604511: \"IFCAPPROVALRELATIONSHIP\",\r\n    3798115385: \"IFCARBITRARYCLOSEDPROFILEDEF\",\r\n    1310608509: \"IFCARBITRARYOPENPROFILEDEF\",\r\n    2705031697: \"IFCARBITRARYPROFILEDEFWITHVOIDS\",\r\n    3460190687: \"IFCASSET\",\r\n    3207858831: \"IFCASYMMETRICISHAPEPROFILEDEF\",\r\n    277319702: \"IFCAUDIOVISUALAPPLIANCE\",\r\n    1532957894: \"IFCAUDIOVISUALAPPLIANCETYPE\",\r\n    4261334040: \"IFCAXIS1PLACEMENT\",\r\n    3125803723: \"IFCAXIS2PLACEMENT2D\",\r\n    2740243338: \"IFCAXIS2PLACEMENT3D\",\r\n    1967976161: \"IFCBSPLINECURVE\",\r\n    2461110595: \"IFCBSPLINECURVEWITHKNOTS\",\r\n    2887950389: \"IFCBSPLINESURFACE\",\r\n    167062518: \"IFCBSPLINESURFACEWITHKNOTS\",\r\n    753842376: \"IFCBEAM\",\r\n    2906023776: \"IFCBEAMSTANDARDCASE\",\r\n    819618141: \"IFCBEAMTYPE\",\r\n    4196446775: \"IFCBEARING\",\r\n    3649138523: \"IFCBEARINGTYPE\",\r\n    616511568: \"IFCBLOBTEXTURE\",\r\n    1334484129: \"IFCBLOCK\",\r\n    32344328: \"IFCBOILER\",\r\n    231477066: \"IFCBOILERTYPE\",\r\n    3649129432: \"IFCBOOLEANCLIPPINGRESULT\",\r\n    2736907675: \"IFCBOOLEANRESULT\",\r\n    4037036970: \"IFCBOUNDARYCONDITION\",\r\n    1136057603: \"IFCBOUNDARYCURVE\",\r\n    1560379544: \"IFCBOUNDARYEDGECONDITION\",\r\n    3367102660: \"IFCBOUNDARYFACECONDITION\",\r\n    1387855156: \"IFCBOUNDARYNODECONDITION\",\r\n    2069777674: \"IFCBOUNDARYNODECONDITIONWARPING\",\r\n    1260505505: \"IFCBOUNDEDCURVE\",\r\n    4182860854: \"IFCBOUNDEDSURFACE\",\r\n    2581212453: \"IFCBOUNDINGBOX\",\r\n    2713105998: \"IFCBOXEDHALFSPACE\",\r\n    644574406: \"IFCBRIDGE\",\r\n    963979645: \"IFCBRIDGEPART\",\r\n    4031249490: \"IFCBUILDING\",\r\n    3299480353: \"IFCBUILDINGELEMENT\",\r\n    2979338954: \"IFCBUILDINGELEMENTPART\",\r\n    39481116: \"IFCBUILDINGELEMENTPARTTYPE\",\r\n    1095909175: \"IFCBUILDINGELEMENTPROXY\",\r\n    1909888760: \"IFCBUILDINGELEMENTPROXYTYPE\",\r\n    1950629157: \"IFCBUILDINGELEMENTTYPE\",\r\n    3124254112: \"IFCBUILDINGSTOREY\",\r\n    1177604601: \"IFCBUILDINGSYSTEM\",\r\n    2938176219: \"IFCBURNER\",\r\n    2188180465: \"IFCBURNERTYPE\",\r\n    2898889636: \"IFCCSHAPEPROFILEDEF\",\r\n    635142910: \"IFCCABLECARRIERFITTING\",\r\n    395041908: \"IFCCABLECARRIERFITTINGTYPE\",\r\n    3758799889: \"IFCCABLECARRIERSEGMENT\",\r\n    3293546465: \"IFCCABLECARRIERSEGMENTTYPE\",\r\n    1051757585: \"IFCCABLEFITTING\",\r\n    2674252688: \"IFCCABLEFITTINGTYPE\",\r\n    4217484030: \"IFCCABLESEGMENT\",\r\n    1285652485: \"IFCCABLESEGMENTTYPE\",\r\n    3999819293: \"IFCCAISSONFOUNDATION\",\r\n    3203706013: \"IFCCAISSONFOUNDATIONTYPE\",\r\n    1123145078: \"IFCCARTESIANPOINT\",\r\n    574549367: \"IFCCARTESIANPOINTLIST\",\r\n    1675464909: \"IFCCARTESIANPOINTLIST2D\",\r\n    2059837836: \"IFCCARTESIANPOINTLIST3D\",\r\n    59481748: \"IFCCARTESIANTRANSFORMATIONOPERATOR\",\r\n    3749851601: \"IFCCARTESIANTRANSFORMATIONOPERATOR2D\",\r\n    3486308946: \"IFCCARTESIANTRANSFORMATIONOPERATOR2DNONUNIFORM\",\r\n    3331915920: \"IFCCARTESIANTRANSFORMATIONOPERATOR3D\",\r\n    1416205885: \"IFCCARTESIANTRANSFORMATIONOPERATOR3DNONUNIFORM\",\r\n    3150382593: \"IFCCENTERLINEPROFILEDEF\",\r\n    3902619387: \"IFCCHILLER\",\r\n    2951183804: \"IFCCHILLERTYPE\",\r\n    3296154744: \"IFCCHIMNEY\",\r\n    2197970202: \"IFCCHIMNEYTYPE\",\r\n    2611217952: \"IFCCIRCLE\",\r\n    2937912522: \"IFCCIRCLEHOLLOWPROFILEDEF\",\r\n    1383045692: \"IFCCIRCLEPROFILEDEF\",\r\n    1062206242: \"IFCCIRCULARARCSEGMENT2D\",\r\n    1677625105: \"IFCCIVILELEMENT\",\r\n    3893394355: \"IFCCIVILELEMENTTYPE\",\r\n    747523909: \"IFCCLASSIFICATION\",\r\n    647927063: \"IFCCLASSIFICATIONREFERENCE\",\r\n    2205249479: \"IFCCLOSEDSHELL\",\r\n    639361253: \"IFCCOIL\",\r\n    2301859152: \"IFCCOILTYPE\",\r\n    776857604: \"IFCCOLOURRGB\",\r\n    3285139300: \"IFCCOLOURRGBLIST\",\r\n    3264961684: \"IFCCOLOURSPECIFICATION\",\r\n    843113511: \"IFCCOLUMN\",\r\n    905975707: \"IFCCOLUMNSTANDARDCASE\",\r\n    300633059: \"IFCCOLUMNTYPE\",\r\n    3221913625: \"IFCCOMMUNICATIONSAPPLIANCE\",\r\n    400855858: \"IFCCOMMUNICATIONSAPPLIANCETYPE\",\r\n    2542286263: \"IFCCOMPLEXPROPERTY\",\r\n    3875453745: \"IFCCOMPLEXPROPERTYTEMPLATE\",\r\n    3732776249: \"IFCCOMPOSITECURVE\",\r\n    15328376: \"IFCCOMPOSITECURVEONSURFACE\",\r\n    2485617015: \"IFCCOMPOSITECURVESEGMENT\",\r\n    1485152156: \"IFCCOMPOSITEPROFILEDEF\",\r\n    3571504051: \"IFCCOMPRESSOR\",\r\n    3850581409: \"IFCCOMPRESSORTYPE\",\r\n    2272882330: \"IFCCONDENSER\",\r\n    2816379211: \"IFCCONDENSERTYPE\",\r\n    2510884976: \"IFCCONIC\",\r\n    370225590: \"IFCCONNECTEDFACESET\",\r\n    1981873012: \"IFCCONNECTIONCURVEGEOMETRY\",\r\n    2859738748: \"IFCCONNECTIONGEOMETRY\",\r\n    45288368: \"IFCCONNECTIONPOINTECCENTRICITY\",\r\n    2614616156: \"IFCCONNECTIONPOINTGEOMETRY\",\r\n    2732653382: \"IFCCONNECTIONSURFACEGEOMETRY\",\r\n    775493141: \"IFCCONNECTIONVOLUMEGEOMETRY\",\r\n    1959218052: \"IFCCONSTRAINT\",\r\n    3898045240: \"IFCCONSTRUCTIONEQUIPMENTRESOURCE\",\r\n    2185764099: \"IFCCONSTRUCTIONEQUIPMENTRESOURCETYPE\",\r\n    1060000209: \"IFCCONSTRUCTIONMATERIALRESOURCE\",\r\n    4105962743: \"IFCCONSTRUCTIONMATERIALRESOURCETYPE\",\r\n    488727124: \"IFCCONSTRUCTIONPRODUCTRESOURCE\",\r\n    1525564444: \"IFCCONSTRUCTIONPRODUCTRESOURCETYPE\",\r\n    2559216714: \"IFCCONSTRUCTIONRESOURCE\",\r\n    2574617495: \"IFCCONSTRUCTIONRESOURCETYPE\",\r\n    3419103109: \"IFCCONTEXT\",\r\n    3050246964: \"IFCCONTEXTDEPENDENTUNIT\",\r\n    3293443760: \"IFCCONTROL\",\r\n    25142252: \"IFCCONTROLLER\",\r\n    578613899: \"IFCCONTROLLERTYPE\",\r\n    2889183280: \"IFCCONVERSIONBASEDUNIT\",\r\n    2713554722: \"IFCCONVERSIONBASEDUNITWITHOFFSET\",\r\n    4136498852: \"IFCCOOLEDBEAM\",\r\n    335055490: \"IFCCOOLEDBEAMTYPE\",\r\n    3640358203: \"IFCCOOLINGTOWER\",\r\n    2954562838: \"IFCCOOLINGTOWERTYPE\",\r\n    1785450214: \"IFCCOORDINATEOPERATION\",\r\n    1466758467: \"IFCCOORDINATEREFERENCESYSTEM\",\r\n    3895139033: \"IFCCOSTITEM\",\r\n    1419761937: \"IFCCOSTSCHEDULE\",\r\n    602808272: \"IFCCOSTVALUE\",\r\n    1973544240: \"IFCCOVERING\",\r\n    1916426348: \"IFCCOVERINGTYPE\",\r\n    3295246426: \"IFCCREWRESOURCE\",\r\n    1815067380: \"IFCCREWRESOURCETYPE\",\r\n    2506170314: \"IFCCSGPRIMITIVE3D\",\r\n    2147822146: \"IFCCSGSOLID\",\r\n    539742890: \"IFCCURRENCYRELATIONSHIP\",\r\n    3495092785: \"IFCCURTAINWALL\",\r\n    1457835157: \"IFCCURTAINWALLTYPE\",\r\n    2601014836: \"IFCCURVE\",\r\n    2827736869: \"IFCCURVEBOUNDEDPLANE\",\r\n    2629017746: \"IFCCURVEBOUNDEDSURFACE\",\r\n    1186437898: \"IFCCURVESEGMENT2D\",\r\n    3800577675: \"IFCCURVESTYLE\",\r\n    1105321065: \"IFCCURVESTYLEFONT\",\r\n    2367409068: \"IFCCURVESTYLEFONTANDSCALING\",\r\n    3510044353: \"IFCCURVESTYLEFONTPATTERN\",\r\n    1213902940: \"IFCCYLINDRICALSURFACE\",\r\n    4074379575: \"IFCDAMPER\",\r\n    3961806047: \"IFCDAMPERTYPE\",\r\n    3426335179: \"IFCDEEPFOUNDATION\",\r\n    1306400036: \"IFCDEEPFOUNDATIONTYPE\",\r\n    3632507154: \"IFCDERIVEDPROFILEDEF\",\r\n    1765591967: \"IFCDERIVEDUNIT\",\r\n    1045800335: \"IFCDERIVEDUNITELEMENT\",\r\n    2949456006: \"IFCDIMENSIONALEXPONENTS\",\r\n    32440307: \"IFCDIRECTION\",\r\n    1335981549: \"IFCDISCRETEACCESSORY\",\r\n    2635815018: \"IFCDISCRETEACCESSORYTYPE\",\r\n    1945343521: \"IFCDISTANCEEXPRESSION\",\r\n    1052013943: \"IFCDISTRIBUTIONCHAMBERELEMENT\",\r\n    1599208980: \"IFCDISTRIBUTIONCHAMBERELEMENTTYPE\",\r\n    562808652: \"IFCDISTRIBUTIONCIRCUIT\",\r\n    1062813311: \"IFCDISTRIBUTIONCONTROLELEMENT\",\r\n    2063403501: \"IFCDISTRIBUTIONCONTROLELEMENTTYPE\",\r\n    1945004755: \"IFCDISTRIBUTIONELEMENT\",\r\n    3256556792: \"IFCDISTRIBUTIONELEMENTTYPE\",\r\n    3040386961: \"IFCDISTRIBUTIONFLOWELEMENT\",\r\n    3849074793: \"IFCDISTRIBUTIONFLOWELEMENTTYPE\",\r\n    3041715199: \"IFCDISTRIBUTIONPORT\",\r\n    3205830791: \"IFCDISTRIBUTIONSYSTEM\",\r\n    1154170062: \"IFCDOCUMENTINFORMATION\",\r\n    770865208: \"IFCDOCUMENTINFORMATIONRELATIONSHIP\",\r\n    3732053477: \"IFCDOCUMENTREFERENCE\",\r\n    395920057: \"IFCDOOR\",\r\n    2963535650: \"IFCDOORLININGPROPERTIES\",\r\n    1714330368: \"IFCDOORPANELPROPERTIES\",\r\n    3242481149: \"IFCDOORSTANDARDCASE\",\r\n    526551008: \"IFCDOORSTYLE\",\r\n    2323601079: \"IFCDOORTYPE\",\r\n    445594917: \"IFCDRAUGHTINGPREDEFINEDCOLOUR\",\r\n    4006246654: \"IFCDRAUGHTINGPREDEFINEDCURVEFONT\",\r\n    342316401: \"IFCDUCTFITTING\",\r\n    869906466: \"IFCDUCTFITTINGTYPE\",\r\n    3518393246: \"IFCDUCTSEGMENT\",\r\n    3760055223: \"IFCDUCTSEGMENTTYPE\",\r\n    1360408905: \"IFCDUCTSILENCER\",\r\n    2030761528: \"IFCDUCTSILENCERTYPE\",\r\n    3900360178: \"IFCEDGE\",\r\n    476780140: \"IFCEDGECURVE\",\r\n    1472233963: \"IFCEDGELOOP\",\r\n    1904799276: \"IFCELECTRICAPPLIANCE\",\r\n    663422040: \"IFCELECTRICAPPLIANCETYPE\",\r\n    862014818: \"IFCELECTRICDISTRIBUTIONBOARD\",\r\n    2417008758: \"IFCELECTRICDISTRIBUTIONBOARDTYPE\",\r\n    3310460725: \"IFCELECTRICFLOWSTORAGEDEVICE\",\r\n    3277789161: \"IFCELECTRICFLOWSTORAGEDEVICETYPE\",\r\n    264262732: \"IFCELECTRICGENERATOR\",\r\n    1534661035: \"IFCELECTRICGENERATORTYPE\",\r\n    402227799: \"IFCELECTRICMOTOR\",\r\n    1217240411: \"IFCELECTRICMOTORTYPE\",\r\n    1003880860: \"IFCELECTRICTIMECONTROL\",\r\n    712377611: \"IFCELECTRICTIMECONTROLTYPE\",\r\n    1758889154: \"IFCELEMENT\",\r\n    4123344466: \"IFCELEMENTASSEMBLY\",\r\n    2397081782: \"IFCELEMENTASSEMBLYTYPE\",\r\n    1623761950: \"IFCELEMENTCOMPONENT\",\r\n    2590856083: \"IFCELEMENTCOMPONENTTYPE\",\r\n    1883228015: \"IFCELEMENTQUANTITY\",\r\n    339256511: \"IFCELEMENTTYPE\",\r\n    2777663545: \"IFCELEMENTARYSURFACE\",\r\n    1704287377: \"IFCELLIPSE\",\r\n    2835456948: \"IFCELLIPSEPROFILEDEF\",\r\n    1658829314: \"IFCENERGYCONVERSIONDEVICE\",\r\n    2107101300: \"IFCENERGYCONVERSIONDEVICETYPE\",\r\n    2814081492: \"IFCENGINE\",\r\n    132023988: \"IFCENGINETYPE\",\r\n    3747195512: \"IFCEVAPORATIVECOOLER\",\r\n    3174744832: \"IFCEVAPORATIVECOOLERTYPE\",\r\n    484807127: \"IFCEVAPORATOR\",\r\n    3390157468: \"IFCEVAPORATORTYPE\",\r\n    4148101412: \"IFCEVENT\",\r\n    211053100: \"IFCEVENTTIME\",\r\n    4024345920: \"IFCEVENTTYPE\",\r\n    297599258: \"IFCEXTENDEDPROPERTIES\",\r\n    4294318154: \"IFCEXTERNALINFORMATION\",\r\n    3200245327: \"IFCEXTERNALREFERENCE\",\r\n    1437805879: \"IFCEXTERNALREFERENCERELATIONSHIP\",\r\n    1209101575: \"IFCEXTERNALSPATIALELEMENT\",\r\n    2853485674: \"IFCEXTERNALSPATIALSTRUCTUREELEMENT\",\r\n    2242383968: \"IFCEXTERNALLYDEFINEDHATCHSTYLE\",\r\n    1040185647: \"IFCEXTERNALLYDEFINEDSURFACESTYLE\",\r\n    3548104201: \"IFCEXTERNALLYDEFINEDTEXTFONT\",\r\n    477187591: \"IFCEXTRUDEDAREASOLID\",\r\n    2804161546: \"IFCEXTRUDEDAREASOLIDTAPERED\",\r\n    2556980723: \"IFCFACE\",\r\n    2047409740: \"IFCFACEBASEDSURFACEMODEL\",\r\n    1809719519: \"IFCFACEBOUND\",\r\n    803316827: \"IFCFACEOUTERBOUND\",\r\n    3008276851: \"IFCFACESURFACE\",\r\n    807026263: \"IFCFACETEDBREP\",\r\n    3737207727: \"IFCFACETEDBREPWITHVOIDS\",\r\n    24185140: \"IFCFACILITY\",\r\n    1310830890: \"IFCFACILITYPART\",\r\n    4219587988: \"IFCFAILURECONNECTIONCONDITION\",\r\n    3415622556: \"IFCFAN\",\r\n    346874300: \"IFCFANTYPE\",\r\n    647756555: \"IFCFASTENER\",\r\n    2489546625: \"IFCFASTENERTYPE\",\r\n    2827207264: \"IFCFEATUREELEMENT\",\r\n    2143335405: \"IFCFEATUREELEMENTADDITION\",\r\n    1287392070: \"IFCFEATUREELEMENTSUBTRACTION\",\r\n    738692330: \"IFCFILLAREASTYLE\",\r\n    374418227: \"IFCFILLAREASTYLEHATCHING\",\r\n    315944413: \"IFCFILLAREASTYLETILES\",\r\n    819412036: \"IFCFILTER\",\r\n    1810631287: \"IFCFILTERTYPE\",\r\n    1426591983: \"IFCFIRESUPPRESSIONTERMINAL\",\r\n    4222183408: \"IFCFIRESUPPRESSIONTERMINALTYPE\",\r\n    2652556860: \"IFCFIXEDREFERENCESWEPTAREASOLID\",\r\n    2058353004: \"IFCFLOWCONTROLLER\",\r\n    3907093117: \"IFCFLOWCONTROLLERTYPE\",\r\n    4278956645: \"IFCFLOWFITTING\",\r\n    3198132628: \"IFCFLOWFITTINGTYPE\",\r\n    182646315: \"IFCFLOWINSTRUMENT\",\r\n    4037862832: \"IFCFLOWINSTRUMENTTYPE\",\r\n    2188021234: \"IFCFLOWMETER\",\r\n    3815607619: \"IFCFLOWMETERTYPE\",\r\n    3132237377: \"IFCFLOWMOVINGDEVICE\",\r\n    1482959167: \"IFCFLOWMOVINGDEVICETYPE\",\r\n    987401354: \"IFCFLOWSEGMENT\",\r\n    1834744321: \"IFCFLOWSEGMENTTYPE\",\r\n    707683696: \"IFCFLOWSTORAGEDEVICE\",\r\n    1339347760: \"IFCFLOWSTORAGEDEVICETYPE\",\r\n    2223149337: \"IFCFLOWTERMINAL\",\r\n    2297155007: \"IFCFLOWTERMINALTYPE\",\r\n    3508470533: \"IFCFLOWTREATMENTDEVICE\",\r\n    3009222698: \"IFCFLOWTREATMENTDEVICETYPE\",\r\n    900683007: \"IFCFOOTING\",\r\n    1893162501: \"IFCFOOTINGTYPE\",\r\n    263784265: \"IFCFURNISHINGELEMENT\",\r\n    4238390223: \"IFCFURNISHINGELEMENTTYPE\",\r\n    1509553395: \"IFCFURNITURE\",\r\n    1268542332: \"IFCFURNITURETYPE\",\r\n    3493046030: \"IFCGEOGRAPHICELEMENT\",\r\n    4095422895: \"IFCGEOGRAPHICELEMENTTYPE\",\r\n    987898635: \"IFCGEOMETRICCURVESET\",\r\n    3448662350: \"IFCGEOMETRICREPRESENTATIONCONTEXT\",\r\n    2453401579: \"IFCGEOMETRICREPRESENTATIONITEM\",\r\n    4142052618: \"IFCGEOMETRICREPRESENTATIONSUBCONTEXT\",\r\n    3590301190: \"IFCGEOMETRICSET\",\r\n    3009204131: \"IFCGRID\",\r\n    852622518: \"IFCGRIDAXIS\",\r\n    178086475: \"IFCGRIDPLACEMENT\",\r\n    2706460486: \"IFCGROUP\",\r\n    812098782: \"IFCHALFSPACESOLID\",\r\n    3319311131: \"IFCHEATEXCHANGER\",\r\n    1251058090: \"IFCHEATEXCHANGERTYPE\",\r\n    2068733104: \"IFCHUMIDIFIER\",\r\n    1806887404: \"IFCHUMIDIFIERTYPE\",\r\n    1484403080: \"IFCISHAPEPROFILEDEF\",\r\n    3905492369: \"IFCIMAGETEXTURE\",\r\n    3570813810: \"IFCINDEXEDCOLOURMAP\",\r\n    2571569899: \"IFCINDEXEDPOLYCURVE\",\r\n    178912537: \"IFCINDEXEDPOLYGONALFACE\",\r\n    2294589976: \"IFCINDEXEDPOLYGONALFACEWITHVOIDS\",\r\n    1437953363: \"IFCINDEXEDTEXTUREMAP\",\r\n    2133299955: \"IFCINDEXEDTRIANGLETEXTUREMAP\",\r\n    4175244083: \"IFCINTERCEPTOR\",\r\n    3946677679: \"IFCINTERCEPTORTYPE\",\r\n    3113134337: \"IFCINTERSECTIONCURVE\",\r\n    2391368822: \"IFCINVENTORY\",\r\n    3741457305: \"IFCIRREGULARTIMESERIES\",\r\n    3020489413: \"IFCIRREGULARTIMESERIESVALUE\",\r\n    2176052936: \"IFCJUNCTIONBOX\",\r\n    4288270099: \"IFCJUNCTIONBOXTYPE\",\r\n    572779678: \"IFCLSHAPEPROFILEDEF\",\r\n    3827777499: \"IFCLABORRESOURCE\",\r\n    428585644: \"IFCLABORRESOURCETYPE\",\r\n    1585845231: \"IFCLAGTIME\",\r\n    76236018: \"IFCLAMP\",\r\n    1051575348: \"IFCLAMPTYPE\",\r\n    2655187982: \"IFCLIBRARYINFORMATION\",\r\n    3452421091: \"IFCLIBRARYREFERENCE\",\r\n    4162380809: \"IFCLIGHTDISTRIBUTIONDATA\",\r\n    629592764: \"IFCLIGHTFIXTURE\",\r\n    1161773419: \"IFCLIGHTFIXTURETYPE\",\r\n    1566485204: \"IFCLIGHTINTENSITYDISTRIBUTION\",\r\n    1402838566: \"IFCLIGHTSOURCE\",\r\n    125510826: \"IFCLIGHTSOURCEAMBIENT\",\r\n    2604431987: \"IFCLIGHTSOURCEDIRECTIONAL\",\r\n    4266656042: \"IFCLIGHTSOURCEGONIOMETRIC\",\r\n    1520743889: \"IFCLIGHTSOURCEPOSITIONAL\",\r\n    3422422726: \"IFCLIGHTSOURCESPOT\",\r\n    1281925730: \"IFCLINE\",\r\n    3092502836: \"IFCLINESEGMENT2D\",\r\n    388784114: \"IFCLINEARPLACEMENT\",\r\n    1154579445: \"IFCLINEARPOSITIONINGELEMENT\",\r\n    2624227202: \"IFCLOCALPLACEMENT\",\r\n    1008929658: \"IFCLOOP\",\r\n    1425443689: \"IFCMANIFOLDSOLIDBREP\",\r\n    3057273783: \"IFCMAPCONVERSION\",\r\n    2347385850: \"IFCMAPPEDITEM\",\r\n    1838606355: \"IFCMATERIAL\",\r\n    1847130766: \"IFCMATERIALCLASSIFICATIONRELATIONSHIP\",\r\n    3708119000: \"IFCMATERIALCONSTITUENT\",\r\n    2852063980: \"IFCMATERIALCONSTITUENTSET\",\r\n    760658860: \"IFCMATERIALDEFINITION\",\r\n    2022407955: \"IFCMATERIALDEFINITIONREPRESENTATION\",\r\n    248100487: \"IFCMATERIALLAYER\",\r\n    3303938423: \"IFCMATERIALLAYERSET\",\r\n    1303795690: \"IFCMATERIALLAYERSETUSAGE\",\r\n    1847252529: \"IFCMATERIALLAYERWITHOFFSETS\",\r\n    2199411900: \"IFCMATERIALLIST\",\r\n    2235152071: \"IFCMATERIALPROFILE\",\r\n    164193824: \"IFCMATERIALPROFILESET\",\r\n    3079605661: \"IFCMATERIALPROFILESETUSAGE\",\r\n    3404854881: \"IFCMATERIALPROFILESETUSAGETAPERING\",\r\n    552965576: \"IFCMATERIALPROFILEWITHOFFSETS\",\r\n    3265635763: \"IFCMATERIALPROPERTIES\",\r\n    853536259: \"IFCMATERIALRELATIONSHIP\",\r\n    1507914824: \"IFCMATERIALUSAGEDEFINITION\",\r\n    2597039031: \"IFCMEASUREWITHUNIT\",\r\n    377706215: \"IFCMECHANICALFASTENER\",\r\n    2108223431: \"IFCMECHANICALFASTENERTYPE\",\r\n    1437502449: \"IFCMEDICALDEVICE\",\r\n    1114901282: \"IFCMEDICALDEVICETYPE\",\r\n    1073191201: \"IFCMEMBER\",\r\n    1911478936: \"IFCMEMBERSTANDARDCASE\",\r\n    3181161470: \"IFCMEMBERTYPE\",\r\n    3368373690: \"IFCMETRIC\",\r\n    2998442950: \"IFCMIRROREDPROFILEDEF\",\r\n    2706619895: \"IFCMONETARYUNIT\",\r\n    2474470126: \"IFCMOTORCONNECTION\",\r\n    977012517: \"IFCMOTORCONNECTIONTYPE\",\r\n    1918398963: \"IFCNAMEDUNIT\",\r\n    3888040117: \"IFCOBJECT\",\r\n    219451334: \"IFCOBJECTDEFINITION\",\r\n    3701648758: \"IFCOBJECTPLACEMENT\",\r\n    2251480897: \"IFCOBJECTIVE\",\r\n    4143007308: \"IFCOCCUPANT\",\r\n    590820931: \"IFCOFFSETCURVE\",\r\n    3388369263: \"IFCOFFSETCURVE2D\",\r\n    3505215534: \"IFCOFFSETCURVE3D\",\r\n    2485787929: \"IFCOFFSETCURVEBYDISTANCES\",\r\n    2665983363: \"IFCOPENSHELL\",\r\n    3588315303: \"IFCOPENINGELEMENT\",\r\n    3079942009: \"IFCOPENINGSTANDARDCASE\",\r\n    4251960020: \"IFCORGANIZATION\",\r\n    1411181986: \"IFCORGANIZATIONRELATIONSHIP\",\r\n    643959842: \"IFCORIENTATIONEXPRESSION\",\r\n    1029017970: \"IFCORIENTEDEDGE\",\r\n    144952367: \"IFCOUTERBOUNDARYCURVE\",\r\n    3694346114: \"IFCOUTLET\",\r\n    2837617999: \"IFCOUTLETTYPE\",\r\n    1207048766: \"IFCOWNERHISTORY\",\r\n    2529465313: \"IFCPARAMETERIZEDPROFILEDEF\",\r\n    2519244187: \"IFCPATH\",\r\n    1682466193: \"IFCPCURVE\",\r\n    2382730787: \"IFCPERFORMANCEHISTORY\",\r\n    3566463478: \"IFCPERMEABLECOVERINGPROPERTIES\",\r\n    3327091369: \"IFCPERMIT\",\r\n    2077209135: \"IFCPERSON\",\r\n    101040310: \"IFCPERSONANDORGANIZATION\",\r\n    3021840470: \"IFCPHYSICALCOMPLEXQUANTITY\",\r\n    2483315170: \"IFCPHYSICALQUANTITY\",\r\n    2226359599: \"IFCPHYSICALSIMPLEQUANTITY\",\r\n    1687234759: \"IFCPILE\",\r\n    1158309216: \"IFCPILETYPE\",\r\n    310824031: \"IFCPIPEFITTING\",\r\n    804291784: \"IFCPIPEFITTINGTYPE\",\r\n    3612865200: \"IFCPIPESEGMENT\",\r\n    4231323485: \"IFCPIPESEGMENTTYPE\",\r\n    597895409: \"IFCPIXELTEXTURE\",\r\n    2004835150: \"IFCPLACEMENT\",\r\n    603570806: \"IFCPLANARBOX\",\r\n    1663979128: \"IFCPLANAREXTENT\",\r\n    220341763: \"IFCPLANE\",\r\n    3171933400: \"IFCPLATE\",\r\n    1156407060: \"IFCPLATESTANDARDCASE\",\r\n    4017108033: \"IFCPLATETYPE\",\r\n    2067069095: \"IFCPOINT\",\r\n    4022376103: \"IFCPOINTONCURVE\",\r\n    1423911732: \"IFCPOINTONSURFACE\",\r\n    2924175390: \"IFCPOLYLOOP\",\r\n    2775532180: \"IFCPOLYGONALBOUNDEDHALFSPACE\",\r\n    2839578677: \"IFCPOLYGONALFACESET\",\r\n    3724593414: \"IFCPOLYLINE\",\r\n    3740093272: \"IFCPORT\",\r\n    1946335990: \"IFCPOSITIONINGELEMENT\",\r\n    3355820592: \"IFCPOSTALADDRESS\",\r\n    759155922: \"IFCPREDEFINEDCOLOUR\",\r\n    2559016684: \"IFCPREDEFINEDCURVEFONT\",\r\n    3727388367: \"IFCPREDEFINEDITEM\",\r\n    3778827333: \"IFCPREDEFINEDPROPERTIES\",\r\n    3967405729: \"IFCPREDEFINEDPROPERTYSET\",\r\n    1775413392: \"IFCPREDEFINEDTEXTFONT\",\r\n    677532197: \"IFCPRESENTATIONITEM\",\r\n    2022622350: \"IFCPRESENTATIONLAYERASSIGNMENT\",\r\n    1304840413: \"IFCPRESENTATIONLAYERWITHSTYLE\",\r\n    3119450353: \"IFCPRESENTATIONSTYLE\",\r\n    2417041796: \"IFCPRESENTATIONSTYLEASSIGNMENT\",\r\n    2744685151: \"IFCPROCEDURE\",\r\n    569719735: \"IFCPROCEDURETYPE\",\r\n    2945172077: \"IFCPROCESS\",\r\n    4208778838: \"IFCPRODUCT\",\r\n    673634403: \"IFCPRODUCTDEFINITIONSHAPE\",\r\n    2095639259: \"IFCPRODUCTREPRESENTATION\",\r\n    3958567839: \"IFCPROFILEDEF\",\r\n    2802850158: \"IFCPROFILEPROPERTIES\",\r\n    103090709: \"IFCPROJECT\",\r\n    653396225: \"IFCPROJECTLIBRARY\",\r\n    2904328755: \"IFCPROJECTORDER\",\r\n    3843373140: \"IFCPROJECTEDCRS\",\r\n    3651124850: \"IFCPROJECTIONELEMENT\",\r\n    2598011224: \"IFCPROPERTY\",\r\n    986844984: \"IFCPROPERTYABSTRACTION\",\r\n    871118103: \"IFCPROPERTYBOUNDEDVALUE\",\r\n    1680319473: \"IFCPROPERTYDEFINITION\",\r\n    148025276: \"IFCPROPERTYDEPENDENCYRELATIONSHIP\",\r\n    4166981789: \"IFCPROPERTYENUMERATEDVALUE\",\r\n    3710013099: \"IFCPROPERTYENUMERATION\",\r\n    2752243245: \"IFCPROPERTYLISTVALUE\",\r\n    941946838: \"IFCPROPERTYREFERENCEVALUE\",\r\n    1451395588: \"IFCPROPERTYSET\",\r\n    3357820518: \"IFCPROPERTYSETDEFINITION\",\r\n    492091185: \"IFCPROPERTYSETTEMPLATE\",\r\n    3650150729: \"IFCPROPERTYSINGLEVALUE\",\r\n    110355661: \"IFCPROPERTYTABLEVALUE\",\r\n    3521284610: \"IFCPROPERTYTEMPLATE\",\r\n    1482703590: \"IFCPROPERTYTEMPLATEDEFINITION\",\r\n    738039164: \"IFCPROTECTIVEDEVICE\",\r\n    2295281155: \"IFCPROTECTIVEDEVICETRIPPINGUNIT\",\r\n    655969474: \"IFCPROTECTIVEDEVICETRIPPINGUNITTYPE\",\r\n    1842657554: \"IFCPROTECTIVEDEVICETYPE\",\r\n    3219374653: \"IFCPROXY\",\r\n    90941305: \"IFCPUMP\",\r\n    2250791053: \"IFCPUMPTYPE\",\r\n    2044713172: \"IFCQUANTITYAREA\",\r\n    2093928680: \"IFCQUANTITYCOUNT\",\r\n    931644368: \"IFCQUANTITYLENGTH\",\r\n    2090586900: \"IFCQUANTITYSET\",\r\n    3252649465: \"IFCQUANTITYTIME\",\r\n    2405470396: \"IFCQUANTITYVOLUME\",\r\n    825690147: \"IFCQUANTITYWEIGHT\",\r\n    2262370178: \"IFCRAILING\",\r\n    2893384427: \"IFCRAILINGTYPE\",\r\n    3024970846: \"IFCRAMP\",\r\n    3283111854: \"IFCRAMPFLIGHT\",\r\n    2324767716: \"IFCRAMPFLIGHTTYPE\",\r\n    1469900589: \"IFCRAMPTYPE\",\r\n    1232101972: \"IFCRATIONALBSPLINECURVEWITHKNOTS\",\r\n    683857671: \"IFCRATIONALBSPLINESURFACEWITHKNOTS\",\r\n    2770003689: \"IFCRECTANGLEHOLLOWPROFILEDEF\",\r\n    3615266464: \"IFCRECTANGLEPROFILEDEF\",\r\n    2798486643: \"IFCRECTANGULARPYRAMID\",\r\n    3454111270: \"IFCRECTANGULARTRIMMEDSURFACE\",\r\n    3915482550: \"IFCRECURRENCEPATTERN\",\r\n    2433181523: \"IFCREFERENCE\",\r\n    4021432810: \"IFCREFERENT\",\r\n    3413951693: \"IFCREGULARTIMESERIES\",\r\n    1580146022: \"IFCREINFORCEMENTBARPROPERTIES\",\r\n    3765753017: \"IFCREINFORCEMENTDEFINITIONPROPERTIES\",\r\n    979691226: \"IFCREINFORCINGBAR\",\r\n    2572171363: \"IFCREINFORCINGBARTYPE\",\r\n    3027567501: \"IFCREINFORCINGELEMENT\",\r\n    964333572: \"IFCREINFORCINGELEMENTTYPE\",\r\n    2320036040: \"IFCREINFORCINGMESH\",\r\n    2310774935: \"IFCREINFORCINGMESHTYPE\",\r\n    160246688: \"IFCRELAGGREGATES\",\r\n    3939117080: \"IFCRELASSIGNS\",\r\n    1683148259: \"IFCRELASSIGNSTOACTOR\",\r\n    2495723537: \"IFCRELASSIGNSTOCONTROL\",\r\n    1307041759: \"IFCRELASSIGNSTOGROUP\",\r\n    1027710054: \"IFCRELASSIGNSTOGROUPBYFACTOR\",\r\n    4278684876: \"IFCRELASSIGNSTOPROCESS\",\r\n    2857406711: \"IFCRELASSIGNSTOPRODUCT\",\r\n    205026976: \"IFCRELASSIGNSTORESOURCE\",\r\n    1865459582: \"IFCRELASSOCIATES\",\r\n    4095574036: \"IFCRELASSOCIATESAPPROVAL\",\r\n    919958153: \"IFCRELASSOCIATESCLASSIFICATION\",\r\n    2728634034: \"IFCRELASSOCIATESCONSTRAINT\",\r\n    982818633: \"IFCRELASSOCIATESDOCUMENT\",\r\n    3840914261: \"IFCRELASSOCIATESLIBRARY\",\r\n    2655215786: \"IFCRELASSOCIATESMATERIAL\",\r\n    826625072: \"IFCRELCONNECTS\",\r\n    1204542856: \"IFCRELCONNECTSELEMENTS\",\r\n    3945020480: \"IFCRELCONNECTSPATHELEMENTS\",\r\n    4201705270: \"IFCRELCONNECTSPORTTOELEMENT\",\r\n    3190031847: \"IFCRELCONNECTSPORTS\",\r\n    2127690289: \"IFCRELCONNECTSSTRUCTURALACTIVITY\",\r\n    1638771189: \"IFCRELCONNECTSSTRUCTURALMEMBER\",\r\n    504942748: \"IFCRELCONNECTSWITHECCENTRICITY\",\r\n    3678494232: \"IFCRELCONNECTSWITHREALIZINGELEMENTS\",\r\n    3242617779: \"IFCRELCONTAINEDINSPATIALSTRUCTURE\",\r\n    886880790: \"IFCRELCOVERSBLDGELEMENTS\",\r\n    2802773753: \"IFCRELCOVERSSPACES\",\r\n    2565941209: \"IFCRELDECLARES\",\r\n    2551354335: \"IFCRELDECOMPOSES\",\r\n    693640335: \"IFCRELDEFINES\",\r\n    1462361463: \"IFCRELDEFINESBYOBJECT\",\r\n    4186316022: \"IFCRELDEFINESBYPROPERTIES\",\r\n    307848117: \"IFCRELDEFINESBYTEMPLATE\",\r\n    781010003: \"IFCRELDEFINESBYTYPE\",\r\n    3940055652: \"IFCRELFILLSELEMENT\",\r\n    279856033: \"IFCRELFLOWCONTROLELEMENTS\",\r\n    427948657: \"IFCRELINTERFERESELEMENTS\",\r\n    3268803585: \"IFCRELNESTS\",\r\n    1441486842: \"IFCRELPOSITIONS\",\r\n    750771296: \"IFCRELPROJECTSELEMENT\",\r\n    1245217292: \"IFCRELREFERENCEDINSPATIALSTRUCTURE\",\r\n    4122056220: \"IFCRELSEQUENCE\",\r\n    366585022: \"IFCRELSERVICESBUILDINGS\",\r\n    3451746338: \"IFCRELSPACEBOUNDARY\",\r\n    3523091289: \"IFCRELSPACEBOUNDARY1STLEVEL\",\r\n    1521410863: \"IFCRELSPACEBOUNDARY2NDLEVEL\",\r\n    1401173127: \"IFCRELVOIDSELEMENT\",\r\n    478536968: \"IFCRELATIONSHIP\",\r\n    816062949: \"IFCREPARAMETRISEDCOMPOSITECURVESEGMENT\",\r\n    1076942058: \"IFCREPRESENTATION\",\r\n    3377609919: \"IFCREPRESENTATIONCONTEXT\",\r\n    3008791417: \"IFCREPRESENTATIONITEM\",\r\n    1660063152: \"IFCREPRESENTATIONMAP\",\r\n    2914609552: \"IFCRESOURCE\",\r\n    2943643501: \"IFCRESOURCEAPPROVALRELATIONSHIP\",\r\n    1608871552: \"IFCRESOURCECONSTRAINTRELATIONSHIP\",\r\n    2439245199: \"IFCRESOURCELEVELRELATIONSHIP\",\r\n    1042787934: \"IFCRESOURCETIME\",\r\n    1856042241: \"IFCREVOLVEDAREASOLID\",\r\n    3243963512: \"IFCREVOLVEDAREASOLIDTAPERED\",\r\n    4158566097: \"IFCRIGHTCIRCULARCONE\",\r\n    3626867408: \"IFCRIGHTCIRCULARCYLINDER\",\r\n    2016517767: \"IFCROOF\",\r\n    2781568857: \"IFCROOFTYPE\",\r\n    2341007311: \"IFCROOT\",\r\n    2778083089: \"IFCROUNDEDRECTANGLEPROFILEDEF\",\r\n    448429030: \"IFCSIUNIT\",\r\n    3053780830: \"IFCSANITARYTERMINAL\",\r\n    1768891740: \"IFCSANITARYTERMINALTYPE\",\r\n    1054537805: \"IFCSCHEDULINGTIME\",\r\n    2157484638: \"IFCSEAMCURVE\",\r\n    2042790032: \"IFCSECTIONPROPERTIES\",\r\n    4165799628: \"IFCSECTIONREINFORCEMENTPROPERTIES\",\r\n    1862484736: \"IFCSECTIONEDSOLID\",\r\n    1290935644: \"IFCSECTIONEDSOLIDHORIZONTAL\",\r\n    1509187699: \"IFCSECTIONEDSPINE\",\r\n    4086658281: \"IFCSENSOR\",\r\n    1783015770: \"IFCSENSORTYPE\",\r\n    1329646415: \"IFCSHADINGDEVICE\",\r\n    4074543187: \"IFCSHADINGDEVICETYPE\",\r\n    867548509: \"IFCSHAPEASPECT\",\r\n    3982875396: \"IFCSHAPEMODEL\",\r\n    4240577450: \"IFCSHAPEREPRESENTATION\",\r\n    4124623270: \"IFCSHELLBASEDSURFACEMODEL\",\r\n    3692461612: \"IFCSIMPLEPROPERTY\",\r\n    3663146110: \"IFCSIMPLEPROPERTYTEMPLATE\",\r\n    4097777520: \"IFCSITE\",\r\n    1529196076: \"IFCSLAB\",\r\n    3127900445: \"IFCSLABELEMENTEDCASE\",\r\n    3027962421: \"IFCSLABSTANDARDCASE\",\r\n    2533589738: \"IFCSLABTYPE\",\r\n    2609359061: \"IFCSLIPPAGECONNECTIONCONDITION\",\r\n    3420628829: \"IFCSOLARDEVICE\",\r\n    1072016465: \"IFCSOLARDEVICETYPE\",\r\n    723233188: \"IFCSOLIDMODEL\",\r\n    3856911033: \"IFCSPACE\",\r\n    1999602285: \"IFCSPACEHEATER\",\r\n    1305183839: \"IFCSPACEHEATERTYPE\",\r\n    3812236995: \"IFCSPACETYPE\",\r\n    1412071761: \"IFCSPATIALELEMENT\",\r\n    710998568: \"IFCSPATIALELEMENTTYPE\",\r\n    2706606064: \"IFCSPATIALSTRUCTUREELEMENT\",\r\n    3893378262: \"IFCSPATIALSTRUCTUREELEMENTTYPE\",\r\n    463610769: \"IFCSPATIALZONE\",\r\n    2481509218: \"IFCSPATIALZONETYPE\",\r\n    451544542: \"IFCSPHERE\",\r\n    4015995234: \"IFCSPHERICALSURFACE\",\r\n    1404847402: \"IFCSTACKTERMINAL\",\r\n    3112655638: \"IFCSTACKTERMINALTYPE\",\r\n    331165859: \"IFCSTAIR\",\r\n    4252922144: \"IFCSTAIRFLIGHT\",\r\n    1039846685: \"IFCSTAIRFLIGHTTYPE\",\r\n    338393293: \"IFCSTAIRTYPE\",\r\n    682877961: \"IFCSTRUCTURALACTION\",\r\n    3544373492: \"IFCSTRUCTURALACTIVITY\",\r\n    2515109513: \"IFCSTRUCTURALANALYSISMODEL\",\r\n    1179482911: \"IFCSTRUCTURALCONNECTION\",\r\n    2273995522: \"IFCSTRUCTURALCONNECTIONCONDITION\",\r\n    1004757350: \"IFCSTRUCTURALCURVEACTION\",\r\n    4243806635: \"IFCSTRUCTURALCURVECONNECTION\",\r\n    214636428: \"IFCSTRUCTURALCURVEMEMBER\",\r\n    2445595289: \"IFCSTRUCTURALCURVEMEMBERVARYING\",\r\n    2757150158: \"IFCSTRUCTURALCURVEREACTION\",\r\n    3136571912: \"IFCSTRUCTURALITEM\",\r\n    1807405624: \"IFCSTRUCTURALLINEARACTION\",\r\n    2162789131: \"IFCSTRUCTURALLOAD\",\r\n    385403989: \"IFCSTRUCTURALLOADCASE\",\r\n    3478079324: \"IFCSTRUCTURALLOADCONFIGURATION\",\r\n    1252848954: \"IFCSTRUCTURALLOADGROUP\",\r\n    1595516126: \"IFCSTRUCTURALLOADLINEARFORCE\",\r\n    609421318: \"IFCSTRUCTURALLOADORRESULT\",\r\n    2668620305: \"IFCSTRUCTURALLOADPLANARFORCE\",\r\n    2473145415: \"IFCSTRUCTURALLOADSINGLEDISPLACEMENT\",\r\n    1973038258: \"IFCSTRUCTURALLOADSINGLEDISPLACEMENTDISTORTION\",\r\n    1597423693: \"IFCSTRUCTURALLOADSINGLEFORCE\",\r\n    1190533807: \"IFCSTRUCTURALLOADSINGLEFORCEWARPING\",\r\n    2525727697: \"IFCSTRUCTURALLOADSTATIC\",\r\n    3408363356: \"IFCSTRUCTURALLOADTEMPERATURE\",\r\n    530289379: \"IFCSTRUCTURALMEMBER\",\r\n    1621171031: \"IFCSTRUCTURALPLANARACTION\",\r\n    2082059205: \"IFCSTRUCTURALPOINTACTION\",\r\n    734778138: \"IFCSTRUCTURALPOINTCONNECTION\",\r\n    1235345126: \"IFCSTRUCTURALPOINTREACTION\",\r\n    3689010777: \"IFCSTRUCTURALREACTION\",\r\n    2986769608: \"IFCSTRUCTURALRESULTGROUP\",\r\n    3657597509: \"IFCSTRUCTURALSURFACEACTION\",\r\n    1975003073: \"IFCSTRUCTURALSURFACECONNECTION\",\r\n    3979015343: \"IFCSTRUCTURALSURFACEMEMBER\",\r\n    2218152070: \"IFCSTRUCTURALSURFACEMEMBERVARYING\",\r\n    603775116: \"IFCSTRUCTURALSURFACEREACTION\",\r\n    2830218821: \"IFCSTYLEMODEL\",\r\n    3958052878: \"IFCSTYLEDITEM\",\r\n    3049322572: \"IFCSTYLEDREPRESENTATION\",\r\n    148013059: \"IFCSUBCONTRACTRESOURCE\",\r\n    4095615324: \"IFCSUBCONTRACTRESOURCETYPE\",\r\n    2233826070: \"IFCSUBEDGE\",\r\n    2513912981: \"IFCSURFACE\",\r\n    699246055: \"IFCSURFACECURVE\",\r\n    2028607225: \"IFCSURFACECURVESWEPTAREASOLID\",\r\n    3101698114: \"IFCSURFACEFEATURE\",\r\n    2809605785: \"IFCSURFACEOFLINEAREXTRUSION\",\r\n    4124788165: \"IFCSURFACEOFREVOLUTION\",\r\n    2934153892: \"IFCSURFACEREINFORCEMENTAREA\",\r\n    1300840506: \"IFCSURFACESTYLE\",\r\n    3303107099: \"IFCSURFACESTYLELIGHTING\",\r\n    1607154358: \"IFCSURFACESTYLEREFRACTION\",\r\n    1878645084: \"IFCSURFACESTYLERENDERING\",\r\n    846575682: \"IFCSURFACESTYLESHADING\",\r\n    1351298697: \"IFCSURFACESTYLEWITHTEXTURES\",\r\n    626085974: \"IFCSURFACETEXTURE\",\r\n    2247615214: \"IFCSWEPTAREASOLID\",\r\n    1260650574: \"IFCSWEPTDISKSOLID\",\r\n    1096409881: \"IFCSWEPTDISKSOLIDPOLYGONAL\",\r\n    230924584: \"IFCSWEPTSURFACE\",\r\n    1162798199: \"IFCSWITCHINGDEVICE\",\r\n    2315554128: \"IFCSWITCHINGDEVICETYPE\",\r\n    2254336722: \"IFCSYSTEM\",\r\n    413509423: \"IFCSYSTEMFURNITUREELEMENT\",\r\n    1580310250: \"IFCSYSTEMFURNITUREELEMENTTYPE\",\r\n    3071757647: \"IFCTSHAPEPROFILEDEF\",\r\n    985171141: \"IFCTABLE\",\r\n    2043862942: \"IFCTABLECOLUMN\",\r\n    531007025: \"IFCTABLEROW\",\r\n    812556717: \"IFCTANK\",\r\n    5716631: \"IFCTANKTYPE\",\r\n    3473067441: \"IFCTASK\",\r\n    1549132990: \"IFCTASKTIME\",\r\n    2771591690: \"IFCTASKTIMERECURRING\",\r\n    3206491090: \"IFCTASKTYPE\",\r\n    912023232: \"IFCTELECOMADDRESS\",\r\n    3824725483: \"IFCTENDON\",\r\n    2347447852: \"IFCTENDONANCHOR\",\r\n    3081323446: \"IFCTENDONANCHORTYPE\",\r\n    3663046924: \"IFCTENDONCONDUIT\",\r\n    2281632017: \"IFCTENDONCONDUITTYPE\",\r\n    2415094496: \"IFCTENDONTYPE\",\r\n    2387106220: \"IFCTESSELLATEDFACESET\",\r\n    901063453: \"IFCTESSELLATEDITEM\",\r\n    4282788508: \"IFCTEXTLITERAL\",\r\n    3124975700: \"IFCTEXTLITERALWITHEXTENT\",\r\n    1447204868: \"IFCTEXTSTYLE\",\r\n    1983826977: \"IFCTEXTSTYLEFONTMODEL\",\r\n    2636378356: \"IFCTEXTSTYLEFORDEFINEDFONT\",\r\n    1640371178: \"IFCTEXTSTYLETEXTMODEL\",\r\n    280115917: \"IFCTEXTURECOORDINATE\",\r\n    1742049831: \"IFCTEXTURECOORDINATEGENERATOR\",\r\n    2552916305: \"IFCTEXTUREMAP\",\r\n    1210645708: \"IFCTEXTUREVERTEX\",\r\n    3611470254: \"IFCTEXTUREVERTEXLIST\",\r\n    1199560280: \"IFCTIMEPERIOD\",\r\n    3101149627: \"IFCTIMESERIES\",\r\n    581633288: \"IFCTIMESERIESVALUE\",\r\n    1377556343: \"IFCTOPOLOGICALREPRESENTATIONITEM\",\r\n    1735638870: \"IFCTOPOLOGYREPRESENTATION\",\r\n    1935646853: \"IFCTOROIDALSURFACE\",\r\n    3825984169: \"IFCTRANSFORMER\",\r\n    1692211062: \"IFCTRANSFORMERTYPE\",\r\n    2595432518: \"IFCTRANSITIONCURVESEGMENT2D\",\r\n    1620046519: \"IFCTRANSPORTELEMENT\",\r\n    2097647324: \"IFCTRANSPORTELEMENTTYPE\",\r\n    2715220739: \"IFCTRAPEZIUMPROFILEDEF\",\r\n    2916149573: \"IFCTRIANGULATEDFACESET\",\r\n    1229763772: \"IFCTRIANGULATEDIRREGULARNETWORK\",\r\n    3593883385: \"IFCTRIMMEDCURVE\",\r\n    3026737570: \"IFCTUBEBUNDLE\",\r\n    1600972822: \"IFCTUBEBUNDLETYPE\",\r\n    1628702193: \"IFCTYPEOBJECT\",\r\n    3736923433: \"IFCTYPEPROCESS\",\r\n    2347495698: \"IFCTYPEPRODUCT\",\r\n    3698973494: \"IFCTYPERESOURCE\",\r\n    427810014: \"IFCUSHAPEPROFILEDEF\",\r\n    180925521: \"IFCUNITASSIGNMENT\",\r\n    630975310: \"IFCUNITARYCONTROLELEMENT\",\r\n    3179687236: \"IFCUNITARYCONTROLELEMENTTYPE\",\r\n    4292641817: \"IFCUNITARYEQUIPMENT\",\r\n    1911125066: \"IFCUNITARYEQUIPMENTTYPE\",\r\n    4207607924: \"IFCVALVE\",\r\n    728799441: \"IFCVALVETYPE\",\r\n    1417489154: \"IFCVECTOR\",\r\n    2799835756: \"IFCVERTEX\",\r\n    2759199220: \"IFCVERTEXLOOP\",\r\n    1907098498: \"IFCVERTEXPOINT\",\r\n    1530820697: \"IFCVIBRATIONDAMPER\",\r\n    3956297820: \"IFCVIBRATIONDAMPERTYPE\",\r\n    2391383451: \"IFCVIBRATIONISOLATOR\",\r\n    3313531582: \"IFCVIBRATIONISOLATORTYPE\",\r\n    2769231204: \"IFCVIRTUALELEMENT\",\r\n    891718957: \"IFCVIRTUALGRIDINTERSECTION\",\r\n    926996030: \"IFCVOIDINGFEATURE\",\r\n    2391406946: \"IFCWALL\",\r\n    4156078855: \"IFCWALLELEMENTEDCASE\",\r\n    3512223829: \"IFCWALLSTANDARDCASE\",\r\n    1898987631: \"IFCWALLTYPE\",\r\n    4237592921: \"IFCWASTETERMINAL\",\r\n    1133259667: \"IFCWASTETERMINALTYPE\",\r\n    3304561284: \"IFCWINDOW\",\r\n    336235671: \"IFCWINDOWLININGPROPERTIES\",\r\n    512836454: \"IFCWINDOWPANELPROPERTIES\",\r\n    486154966: \"IFCWINDOWSTANDARDCASE\",\r\n    1299126871: \"IFCWINDOWSTYLE\",\r\n    4009809668: \"IFCWINDOWTYPE\",\r\n    4088093105: \"IFCWORKCALENDAR\",\r\n    1028945134: \"IFCWORKCONTROL\",\r\n    4218914973: \"IFCWORKPLAN\",\r\n    3342526732: \"IFCWORKSCHEDULE\",\r\n    1236880293: \"IFCWORKTIME\",\r\n    2543172580: \"IFCZSHAPEPROFILEDEF\",\r\n    1033361043: \"IFCZONE\",\r\n}","import { IfcTypesMap } from '../IfcTypesMap';\r\nimport { JSONObject, pName } from '../../BaseDefinitions';\r\nimport { BasePropertyManager } from './BasePropertyManager';\r\nimport { IFCPROJECT } from 'web-ifc';\r\nimport { PropertyAPI } from './BaseDefinitions';\r\n\r\nexport class JSONPropertyManager extends BasePropertyManager implements PropertyAPI {\r\n\r\n    async getItemProperties(modelID: number, id: number, recursive = false) {\r\n        return { ...this.state.models[modelID].jsonData[id] };\r\n    }\r\n\r\n    async getSpatialStructure(modelID: number, includeProperties?: boolean) {\r\n        const chunks = await this.getSpatialTreeChunks(modelID);\r\n        const projectsIDs = await this.getAllItemsOfType(modelID, IFCPROJECT, false);\r\n        const projectID = projectsIDs[0];\r\n        const project = JSONPropertyManager.newIfcProject(projectID);\r\n        await this.getSpatialNode(modelID, project, chunks, includeProperties);\r\n        return { ...project };\r\n    }\r\n\r\n    async getAllItemsOfType(modelID: number, type: number, verbose: boolean) {\r\n        const data = this.state.models[modelID].jsonData;\r\n        const typeName = IfcTypesMap[type];\r\n        if (!typeName) {\r\n            throw new Error(`Type not found: ${type}`);\r\n        }\r\n        return this.filterItemsByType(data, typeName, verbose);\r\n    }\r\n\r\n    override async getProperty(modelID: number, elementID: number, recursive = false, propName: pName) {\r\n        const resultIDs = await this.getAllRelatedItemsOfType(modelID, elementID, propName);\r\n        const result = this.getItemsByID(modelID, resultIDs);\r\n        if (recursive) {\r\n            result.forEach(result => this.getReferencesRecursively(modelID, result));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    protected override getNodeType(modelID: number, id: number) {\r\n        return this.state.models[modelID].jsonData[id].type;\r\n    }\r\n\r\n    protected override async getChunks(modelID: number, chunks: any, propNames: pName) {\r\n        const relation = await this.getAllItemsOfType(modelID, propNames.name, true);\r\n        relation.forEach(rel => {\r\n            this.saveChunk(chunks, propNames, rel);\r\n        });\r\n    }\r\n\r\n    private filterItemsByType(data: { [id: number]: JSONObject }, typeName: string, verbose: boolean) {\r\n        const result: any[] = [];\r\n        Object.keys(data).forEach(key => {\r\n            const numKey = parseInt(key);\r\n            if (data[numKey].type.toUpperCase() === typeName) {\r\n                result.push(verbose ? { ...data[numKey] } : numKey);\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    private async getAllRelatedItemsOfType(modelID: number, id: number, propNames: pName) {\r\n        const lines = await this.getAllItemsOfType(modelID, propNames.name, true);\r\n        const IDs: number[] = [];\r\n        lines.forEach(line => {\r\n            const isRelated = JSONPropertyManager.isRelated(id, line, propNames);\r\n            if (isRelated) this.getRelated(line, propNames, IDs);\r\n        });\r\n        return IDs;\r\n    }\r\n\r\n    private getItemsByID(modelID: number, ids: number[]) {\r\n        const data = this.state.models[modelID].jsonData;\r\n        const result: any[] = [];\r\n        ids.forEach(id => result.push({ ...data[id] }));\r\n        return result;\r\n    }\r\n\r\n    private getReferencesRecursively(modelID: number, jsonObject: any) {\r\n        if (jsonObject == undefined) return;\r\n        const keys = Object.keys(jsonObject);\r\n        for (let i = 0; i < keys.length; i++) {\r\n            const key = keys[i];\r\n            this.getJSONItem(modelID, jsonObject, key);\r\n        }\r\n    }\r\n\r\n    private getJSONItem(modelID: number, jsonObject: any, key: string) {\r\n        if (Array.isArray(jsonObject[key])) {\r\n            return this.getMultipleJSONItems(modelID, jsonObject, key);\r\n        }\r\n        if (jsonObject[key] && jsonObject[key].type === 5) {\r\n            jsonObject[key] = this.getItemsByID(modelID, [jsonObject[key].value])[0];\r\n            this.getReferencesRecursively(modelID, jsonObject[key]);\r\n        }\r\n    }\r\n\r\n    private getMultipleJSONItems(modelID: number, jsonObject: any, key: string) {\r\n        jsonObject[key] = jsonObject[key].map((item: any) => {\r\n            if (item.type === 5) {\r\n                item = this.getItemsByID(modelID, [item.value])[0];\r\n                this.getReferencesRecursively(modelID, item);\r\n            }\r\n            return item;\r\n        });\r\n    }\r\n}","import {\r\n    IdAttrName\r\n} from '../../BaseDefinitions';\r\nimport { IfcState } from '../../BaseDefinitions';\r\nimport { BufferGeometry } from 'three';\r\nimport { WebIfcPropertyManager } from './WebIfcPropertyManager';\r\nimport { JSONPropertyManager } from './JSONPropertyManager';\r\nimport { PropertyManagerAPI, PropertyAPI } from './BaseDefinitions';\r\nimport { IfcElements } from '../IFCElementsMap';\r\n\r\n/**\r\n * Contains the logic to get the properties of the items within an IFC model.\r\n */\r\nexport class PropertyManager implements PropertyManagerAPI {\r\n    private readonly webIfcProps: WebIfcPropertyManager;\r\n    private readonly jsonProps: JSONPropertyManager;\r\n    private currentProps: PropertyAPI;\r\n\r\n    constructor(private state: IfcState) {\r\n        this.webIfcProps = new WebIfcPropertyManager(state);\r\n        this.jsonProps = new JSONPropertyManager(state);\r\n        this.currentProps = this.webIfcProps;\r\n    }\r\n\r\n    async getExpressId(geometry: BufferGeometry, faceIndex: number) {\r\n        if (!geometry.index) throw new Error('Geometry does not have index information.');\r\n        const geoIndex = geometry.index.array;\r\n        return geometry.attributes[IdAttrName].getX(geoIndex[3 * faceIndex]);\r\n    }\r\n\r\n    async getItemProperties(modelID: number, elementID: number, recursive = false) {\r\n        this.updateCurrentProps();\r\n        return this.currentProps.getItemProperties(modelID, elementID, recursive);\r\n    }\r\n\r\n    async getAllItemsOfType(modelID: number, type: number, verbose: boolean) {\r\n        this.updateCurrentProps();\r\n        return this.currentProps.getAllItemsOfType(modelID, type, verbose);\r\n    }\r\n\r\n    async getPropertySets(modelID: number, elementID: number, recursive = false) {\r\n        this.updateCurrentProps();\r\n        return this.currentProps.getPropertySets(modelID, elementID, recursive);\r\n    }\r\n\r\n    async getTypeProperties(modelID: number, elementID: number, recursive = false) {\r\n        this.updateCurrentProps();\r\n        return this.currentProps.getTypeProperties(modelID, elementID, recursive);\r\n    }\r\n\r\n    async getMaterialsProperties(modelID: number, elementID: number, recursive = false) {\r\n        this.updateCurrentProps();\r\n        return this.currentProps.getMaterialsProperties(modelID, elementID, recursive);\r\n    }\r\n\r\n    async getSpatialStructure(modelID: number, includeProperties?: boolean) {\r\n        this.updateCurrentProps();\r\n        if (!this.state.useJSON && includeProperties) {\r\n            console.warn('Including properties in getSpatialStructure with the JSON workflow disabled can lead to poor performance.');\r\n        }\r\n        return await this.currentProps.getSpatialStructure(modelID, includeProperties);\r\n    }\r\n\r\n    private updateCurrentProps() {\r\n        this.currentProps = this.state.useJSON ? this.jsonProps : this.webIfcProps;\r\n    }\r\n\r\n}\r\n","import { IfcState, SelectedItems } from '../BaseDefinitions';\r\nimport { IfcElements } from './IFCElementsMap'\r\nimport { IFCWorkerHandler } from '../web-workers/IFCWorkerHandler';\r\n\r\n/**\r\n * Contains the logic to manage the type (e. g. IfcWall, IfcWindow, IfcDoor) of\r\n * all the items within an IFC file.\r\n */\r\nexport class TypeManager {\r\n\r\n    constructor(private state: IfcState) {\r\n        this.state = state;\r\n    }\r\n\r\n    async getAllTypes(worker?: IFCWorkerHandler){\r\n        for(let modelID in this.state.models){\r\n            const types = this.state.models[modelID].types;\r\n            if(Object.keys(types).length == 0) {\r\n                await this.getAllTypesOfModel(parseInt(modelID), worker);\r\n            }\r\n        }\r\n    }\r\n\r\n    async getAllTypesOfModel(modelID: number, worker?: IFCWorkerHandler) {\r\n        const result = {};\r\n        const elements = Object.keys(IfcElements).map((e) => parseInt(e));\r\n        for(let i = 0; i < elements.length; i++) {\r\n            const element = elements[i];\r\n            const lines = await this.state.api.GetLineIDsWithType(modelID, element);\r\n            const size = lines.size();\r\n            //@ts-ignore\r\n            for (let i = 0; i < size; i++) result[lines.get(i)] = element;\r\n        }\r\n        if(this.state.worker.active && worker) {\r\n            await worker.workerState.updateModelStateTypes(modelID, result);\r\n        } else {\r\n            this.state.models[modelID].types = result;\r\n        }\r\n    }\r\n}\r\n","import { IfcState, SelectedItems } from '../BaseDefinitions';\r\nimport { BufferGeometry, Mesh } from 'three';\r\n\r\nexport class BvhManager {\r\n    private computeBoundsTree?: any;\r\n    private disposeBoundsTree?: any;\r\n    private acceleratedRaycast?: any;\r\n\r\n    initializeMeshBVH(computeBoundsTree: any, disposeBoundsTree: any, acceleratedRaycast: any) {\r\n        this.computeBoundsTree = computeBoundsTree;\r\n        this.disposeBoundsTree = disposeBoundsTree;\r\n        this.acceleratedRaycast = acceleratedRaycast;\r\n        this.setupThreeMeshBVH();\r\n    }\r\n\r\n    applyThreeMeshBVH(geometry: BufferGeometry) {\r\n        if (this.computeBoundsTree)\r\n            //@ts-ignore\r\n            geometry.computeBoundsTree();\r\n    }\r\n\r\n    private setupThreeMeshBVH() {\r\n        if (!this.computeBoundsTree || !this.disposeBoundsTree || !this.acceleratedRaycast) return;\r\n        //@ts-ignore\r\n        BufferGeometry.prototype.computeBoundsTree = this.computeBoundsTree;\r\n        //@ts-ignore\r\n        BufferGeometry.prototype.disposeBoundsTree = this.disposeBoundsTree;\r\n        Mesh.prototype.raycast = this.acceleratedRaycast;\r\n    }\r\n}","import { IfcState } from '../BaseDefinitions';\r\n\r\nexport class ItemsHider {\r\n    private state: IfcState;\r\n    private modelCoordinates: { [modelID: number]: Float32Array } = {};\r\n    private expressIDCoordinatesMap: {\r\n        [modelID: number]: {\r\n            [id: number]: number[];\r\n        }\r\n    } = {};\r\n\r\n    constructor(state: IfcState) {\r\n        this.state = state;\r\n    };\r\n\r\n    dispose() {\r\n        this.modelCoordinates = {};\r\n        this.expressIDCoordinatesMap = {};\r\n    }\r\n\r\n    processCoordinates(modelID: number) {\r\n        const attributes = this.getAttributes(modelID);\r\n        const ids = Array.from(attributes.expressID.array);\r\n        this.expressIDCoordinatesMap[modelID] = {};\r\n        for (let i = 0; i < ids.length; i++) {\r\n            if (!this.expressIDCoordinatesMap[modelID][ids[i]]) {\r\n                this.expressIDCoordinatesMap[modelID][ids[i]] = [];\r\n            }\r\n            const current = this.expressIDCoordinatesMap[modelID];\r\n            current[ids[i]].push(3 * i);\r\n        }\r\n        this.initializeCoordinates(modelID);\r\n    }\r\n\r\n    hideItems(modelID: number, ids: number[]) {\r\n        this.editCoordinates(modelID, ids, true);\r\n    }\r\n\r\n    showItems(modelID: number, ids: number[]) {\r\n        this.editCoordinates(modelID, ids, false);\r\n    }\r\n\r\n    editCoordinates(modelID: number, ids: number[], hide: boolean) {\r\n        const current = this.expressIDCoordinatesMap[modelID];\r\n        const indices: number[] = [];\r\n        ids.forEach((id: number) => {\r\n            if (current[id]) {\r\n                for (let i = 0; i < current[id].length; i++) {\r\n                    indices.push(current[id][i]);\r\n                }\r\n            }\r\n        });\r\n        const coords = this.getCoordinates(modelID);\r\n        const initial = this.modelCoordinates[modelID];\r\n        if (hide) indices.forEach(i => coords.set([0, 0, 0], i));\r\n        else indices.forEach(i => coords.set([initial[i], initial[i + 1], initial[i+2]], i));\r\n\r\n        this.getAttributes(modelID).position.needsUpdate = true;\r\n    }\r\n\r\n    showAllItems(modelID: number) {\r\n        if (this.modelCoordinates[modelID]) {\r\n            this.resetCoordinates(modelID);\r\n            this.getAttributes(modelID).position.needsUpdate = true;\r\n        }\r\n    }\r\n\r\n    hideAllItems(modelID: number) {\r\n        this.getCoordinates(modelID).fill(0);\r\n        this.getAttributes(modelID).position.needsUpdate = true;\r\n    }\r\n\r\n    private initializeCoordinates(modelID: number) {\r\n        const coordinates = this.getCoordinates(modelID);\r\n        if (!this.modelCoordinates[modelID]) {\r\n            this.modelCoordinates[modelID] = new Float32Array(coordinates);\r\n        }\r\n    }\r\n\r\n    private resetCoordinates(modelID: number) {\r\n        const initial = this.modelCoordinates[modelID];\r\n        this.getCoordinates(modelID).set(initial);\r\n    }\r\n\r\n    private getCoordinates(modelID: number) {\r\n        return this.getAttributes(modelID).position.array as Float32Array;\r\n    }\r\n\r\n    private getAttributes(modelID: number) {\r\n        return this.state.models[modelID].mesh.geometry.attributes;\r\n    }\r\n}","import { IfcModel, IfcState } from '../BaseDefinitions';\r\nimport { Mesh } from 'three';\r\n\r\nexport class MemoryCleaner {\r\n    constructor(private state: IfcState) {};\r\n\r\n    releaseAllModels() {\r\n        const models = Object.values(this.state.models);\r\n        models.forEach(model => {\r\n            this.releaseMeshModelMemory(model);\r\n            this.releaseJSONMemory(model);\r\n            this.releaseGeometryByMaterials(model);\r\n            // @ts-ignore\r\n            model.types = null;\r\n        });\r\n    }\r\n\r\n    private releaseGeometryByMaterials(model: IfcModel) {\r\n        const keys = Object.keys(model.items);\r\n        keys.forEach(key => {\r\n            const geomsByMat = model.items[key];\r\n            geomsByMat.material.dispose();\r\n            // @ts-ignore\r\n            geomsByMat.material = null;\r\n\r\n            Object.values(geomsByMat.geometries).forEach(geom => geom.dispose());\r\n            // @ts-ignore\r\n            geomsByMat.geometries = null;\r\n        });\r\n        // @ts-ignore\r\n        model.items = null;\r\n    }\r\n\r\n    private releaseJSONMemory(model: IfcModel) {\r\n        const keys = Object.keys(model.jsonData);\r\n        keys.forEach((key) => delete model.jsonData[parseInt(key)]);\r\n        // @ts-ignore\r\n        model.jsonData = null;\r\n    }\r\n\r\n    private releaseMeshModelMemory(model: IfcModel) {\r\n        this.releaseMeshMemory(model.mesh);\r\n        // @ts-ignore\r\n        model.mesh = null;\r\n    }\r\n\r\n    private releaseMeshMemory(mesh: Mesh) {\r\n        if (mesh.geometry) {\r\n            mesh.geometry.dispose();\r\n        }\r\n        if (mesh.parent) {\r\n            mesh.parent.remove(mesh);\r\n        }\r\n        if (mesh.material) {\r\n            Array.isArray(mesh.material) ?\r\n                mesh.material.forEach(mat => mat.dispose()) :\r\n                mesh.material.dispose();\r\n        }\r\n        if(mesh.children.length > 0) {\r\n            mesh.children.forEach(child => {\r\n                if(child.type === \"Mesh\") this.releaseMeshMemory(child as Mesh);\r\n                mesh.remove(child);\r\n            })\r\n        }\r\n    }\r\n}","import { HighlightConfigOfModel, IfcState, WebIfcAPI } from '../BaseDefinitions';\r\nimport { BvhManager } from '../components/BvhManager';\r\nimport { Material, Object3D } from 'three';\r\n\r\nexport interface IfcWorkerAPI {\r\n    post: (data: any) => void;\r\n    initializeAPI: (api: WebIfcAPI) => void;\r\n    state?: IfcState;\r\n    postCallback: (data: any, result: any, serializer?: any) => void;\r\n}\r\n\r\nexport enum WorkerActions {\r\n    // Worker State Actions\r\n    updateStateUseJson = 'updateStateUseJson',\r\n    updateStateWebIfcSettings = 'updateStateWebIfcSettings',\r\n    updateModelStateTypes = 'updateModelStateTypes',\r\n    updateModelStateJsonData = 'updateModelStateJsonData',\r\n    loadJsonDataFromWorker = 'loadJsonDataFromWorker',\r\n\r\n    // WebIFC Actions\r\n    Close = 'Close',\r\n    Init = 'Init',\r\n    OpenModel = 'OpenModel',\r\n    CreateModel = 'CreateModel',\r\n    ExportFileAsIFC = 'ExportFileAsIFC',\r\n    GetGeometry = 'GetGeometry',\r\n    GetLine = 'GetLine',\r\n    GetAndClearErrors = 'GetAndClearErrors',\r\n    WriteLine = 'WriteLine',\r\n    FlattenLine = 'FlattenLine',\r\n    GetRawLineData = 'GetRawLineData',\r\n    WriteRawLineData = 'WriteRawLineData',\r\n    GetLineIDsWithType = 'GetLineIDsWithType',\r\n    GetAllLines = 'GetAllLines',\r\n    SetGeometryTransformation = 'SetGeometryTransformation',\r\n    GetCoordinationMatrix = 'GetCoordinationMatrix',\r\n    GetVertexArray = 'GetVertexArray',\r\n    GetIndexArray = 'GetIndexArray',\r\n    getSubArray = 'getSubArray',\r\n    CloseModel = 'CloseModel',\r\n    StreamAllMeshes = 'StreamAllMeshes',\r\n    StreamAllMeshesWithTypes = 'StreamAllMeshesWithTypes',\r\n    IsModelOpen = 'IsModelOpen',\r\n    LoadAllGeometry = 'LoadAllGeometry',\r\n    GetFlatMesh = 'GetFlatMesh',\r\n    SetWasmPath = 'SetWasmPath',\r\n\r\n    // Parser\r\n    parse = 'parse',\r\n    setupOptionalCategories = 'setupOptionalCategories',\r\n\r\n    // Properties\r\n    getExpressId = 'getExpressId',\r\n    initializeProperties = 'initializeProperties',\r\n    getAllItemsOfType = 'getAllItemsOfType',\r\n    getItemProperties = 'getItemProperties',\r\n    getMaterialsProperties = 'getMaterialsProperties',\r\n    getPropertySets = 'getPropertySets',\r\n    getSpatialStructure = 'getSpatialStructure',\r\n    getTypeProperties = 'getTypeProperties'\r\n}\r\n\r\nexport enum WorkerAPIs {\r\n    workerState = 'workerState',\r\n    webIfc = 'webIfc',\r\n    properties = 'properties',\r\n    parser = 'parser',\r\n}\r\n\r\nexport interface IfcEventData {\r\n    worker: WorkerAPIs;\r\n    action: WorkerActions;\r\n    args: any;\r\n    id: number;\r\n    result: any;\r\n    onProgress: boolean;\r\n}\r\n\r\nexport interface RootWorker {\r\n    [WorkerAPIs.workerState]: WorkerStateAPI;\r\n    [WorkerAPIs.webIfc]: WebIfcWorkerAPI;\r\n    [WorkerAPIs.properties]: PropertyWorkerAPI;\r\n}\r\n\r\nexport interface BaseWorkerAPI {\r\n    API: WorkerAPIs;\r\n}\r\n\r\nexport type IfcWorkerEventHandler = (data: IfcEventData) => void;\r\n\r\nexport interface WorkerStateAPI extends BaseWorkerAPI {\r\n    [WorkerActions.updateStateUseJson]: IfcWorkerEventHandler;\r\n    [WorkerActions.updateStateWebIfcSettings]: IfcWorkerEventHandler;\r\n    [WorkerActions.updateModelStateTypes]: IfcWorkerEventHandler;\r\n    [WorkerActions.updateModelStateJsonData]: IfcWorkerEventHandler;\r\n    [WorkerActions.loadJsonDataFromWorker]: IfcWorkerEventHandler;\r\n}\r\n\r\nexport interface PropertyWorkerAPI extends BaseWorkerAPI {\r\n    [WorkerActions.getAllItemsOfType]: IfcWorkerEventHandler;\r\n    [WorkerActions.getItemProperties]: IfcWorkerEventHandler;\r\n    [WorkerActions.getMaterialsProperties]: IfcWorkerEventHandler;\r\n    [WorkerActions.getPropertySets]: IfcWorkerEventHandler;\r\n    [WorkerActions.getSpatialStructure]: IfcWorkerEventHandler;\r\n    [WorkerActions.getTypeProperties]: IfcWorkerEventHandler;\r\n}\r\n\r\nexport interface ParserWorkerAPI extends BaseWorkerAPI {\r\n    [WorkerActions.parse]: IfcWorkerEventHandler;\r\n    [WorkerActions.setupOptionalCategories]: IfcWorkerEventHandler;\r\n}\r\n\r\nexport interface WebIfcWorkerAPI extends BaseWorkerAPI {\r\n    [WorkerActions.Init]: IfcWorkerEventHandler;\r\n    [WorkerActions.Close]: IfcWorkerEventHandler;\r\n    [WorkerActions.OpenModel]: IfcWorkerEventHandler;\r\n    [WorkerActions.CreateModel]: IfcWorkerEventHandler;\r\n    [WorkerActions.ExportFileAsIFC]: IfcWorkerEventHandler;\r\n    [WorkerActions.GetGeometry]: IfcWorkerEventHandler;\r\n    [WorkerActions.GetLine]: IfcWorkerEventHandler;\r\n    [WorkerActions.GetAndClearErrors]: IfcWorkerEventHandler;\r\n    [WorkerActions.WriteLine]: IfcWorkerEventHandler;\r\n    [WorkerActions.FlattenLine]: IfcWorkerEventHandler;\r\n    [WorkerActions.GetRawLineData]: IfcWorkerEventHandler;\r\n    [WorkerActions.WriteRawLineData]: IfcWorkerEventHandler;\r\n    [WorkerActions.GetLineIDsWithType]: IfcWorkerEventHandler;\r\n    [WorkerActions.GetAllLines]: IfcWorkerEventHandler;\r\n    [WorkerActions.SetGeometryTransformation]: IfcWorkerEventHandler;\r\n    [WorkerActions.GetCoordinationMatrix]: IfcWorkerEventHandler;\r\n    [WorkerActions.GetVertexArray]: IfcWorkerEventHandler;\r\n    [WorkerActions.GetIndexArray]: IfcWorkerEventHandler;\r\n    [WorkerActions.getSubArray]: IfcWorkerEventHandler;\r\n    [WorkerActions.CloseModel]: IfcWorkerEventHandler;\r\n    [WorkerActions.StreamAllMeshes]: IfcWorkerEventHandler;\r\n    [WorkerActions.StreamAllMeshesWithTypes]: IfcWorkerEventHandler;\r\n    [WorkerActions.IsModelOpen]: IfcWorkerEventHandler;\r\n    [WorkerActions.LoadAllGeometry]: IfcWorkerEventHandler;\r\n    [WorkerActions.GetFlatMesh]: IfcWorkerEventHandler;\r\n    [WorkerActions.SetWasmPath]: IfcWorkerEventHandler;\r\n}\r\n\r\nexport interface SerializedVector {\r\n    [key: number]: any;\r\n\r\n    size: number;\r\n}\r\n\r\nexport interface SerializedIfcGeometry {\r\n    GetVertexData: number;\r\n    GetVertexDataSize: number;\r\n    GetIndexData: number;\r\n    GetIndexDataSize: number;\r\n}\r\n\r\nexport interface SerializedFlatMesh {\r\n    geometries: SerializedVector;\r\n    expressID: number;\r\n}\r\n\r\nexport const ErrorStateNotAvailable = 'The state of the worker does not exist';\r\nexport const ErrorRootStateNotAvailable = 'The root worker does not have any state';\r\nexport const ErrorPropertiesNotAvailable = 'Error: Properties not available from web worker';\r\nexport const ErrorParserNotAvailable = 'Error: Parser not available from web worker';\r\nexport const ErrorBadJsonPath = 'Error: Model not available from web worker';\r\nexport const ErrorBadJson = 'Error: The given Json could not be read as a JS object';","import { SerializedVector } from '../BaseDefinitions';\r\nimport { Vector as WebIfcVector } from 'web-ifc';\r\n\r\nexport class Vector<T> implements WebIfcVector<T> {\r\n    private readonly _size: number;\r\n    private _data: { [key: number]: T } = {};\r\n\r\n    constructor(vector: SerializedVector) {\r\n        this._size = vector.size;\r\n        const keys = Object.keys(vector).filter((key) => key.indexOf('size') === -1).map(key => parseInt(key));\r\n        keys.forEach((key) => this._data[key] = vector[key]);\r\n    }\r\n\r\n    size() {\r\n        return this._size;\r\n    }\r\n\r\n    get(index: number) {\r\n        return this._data[index];\r\n    }\r\n}","import { SerializedIfcGeometry } from '../BaseDefinitions';\r\nimport { IfcGeometry as WebIfcIfcGeometry } from 'web-ifc';\r\n\r\nexport class IfcGeometry implements WebIfcIfcGeometry {\r\n    private readonly _GetVertexData: number;\r\n    private readonly _GetVertexDataSize: number;\r\n    private readonly _GetIndexData: number;\r\n    private readonly _GetIndexDataSize: number;\r\n\r\n    constructor(vector: SerializedIfcGeometry) {\r\n        this._GetVertexData = vector.GetVertexData;\r\n        this._GetVertexDataSize = vector.GetVertexDataSize;\r\n        this._GetIndexData = vector.GetIndexData;\r\n        this._GetIndexDataSize = vector.GetIndexDataSize;\r\n    }\r\n\r\n    GetVertexData() {\r\n        return this._GetVertexData;\r\n    }\r\n\r\n    GetVertexDataSize() {\r\n        return this._GetVertexDataSize;\r\n    }\r\n\r\n    GetIndexData() {\r\n        return this._GetIndexData;\r\n    }\r\n\r\n    GetIndexDataSize() {\r\n        return this._GetIndexDataSize;\r\n    }\r\n}","import { SerializedFlatMesh } from '../BaseDefinitions';\r\nimport { FlatMesh as WebIfcFlatMesh, PlacedGeometry } from 'web-ifc';\r\nimport { Vector } from './Vector';\r\nimport { Serializer } from './Serializer';\r\n\r\nexport class FlatMesh implements WebIfcFlatMesh {\r\n    geometries: Vector<PlacedGeometry>;\r\n    expressID: number;\r\n\r\n    constructor(serializer: Serializer, flatMesh: SerializedFlatMesh) {\r\n        this.expressID = flatMesh.expressID;\r\n        this.geometries = serializer.reconstructVector(flatMesh.geometries);\r\n    }\r\n}","import { SerializedVector } from '../BaseDefinitions';\r\nimport { FlatMesh as WebIfcFlatMesh, Vector as WebIfcVector } from 'web-ifc';\r\nimport { Serializer } from './Serializer';\r\n\r\nexport class FlatMeshVector implements WebIfcVector<WebIfcFlatMesh> {\r\n    private readonly _size: number;\r\n    private _data: { [key: number]: WebIfcFlatMesh } = {};\r\n\r\n    constructor(serializer: Serializer, vector: SerializedVector) {\r\n        this._size = vector.size;\r\n        const keys = Object.keys(vector).filter((key) => key.indexOf('size') === -1).map(key => parseInt(key));\r\n        keys.forEach(key => this._data[key] = serializer.reconstructFlatMesh(vector[key]));\r\n    }\r\n\r\n    size() {\r\n        return this._size;\r\n    }\r\n\r\n    get(index: number) {\r\n        return this._data[index];\r\n    }\r\n}","import { Color, MeshLambertMaterial } from 'three';\r\n\r\nexport class SerializedMaterial {\r\n    color: number[];\r\n    opacity: number;\r\n    transparent: boolean;\r\n\r\n    constructor(material: MeshLambertMaterial) {\r\n        this.color = [material.color.r, material.color.g, material.color.b];\r\n        this.opacity = material.opacity;\r\n        this.transparent = material.transparent;\r\n    }\r\n}\r\n\r\nexport class MaterialReconstructor {\r\n    static new(material: SerializedMaterial) {\r\n        return new MeshLambertMaterial({\r\n            color: new Color(material.color[0], material.color[1], material.color[2]),\r\n            opacity: material.opacity,\r\n            transparent: material.transparent\r\n        })\r\n    }\r\n}","import { BufferAttribute, BufferGeometry } from 'three';\r\nimport { IFCModel } from '../../components/IFCModel';\r\n\r\nexport class SerializedGeometry {\r\n    position: ArrayLike<number>;\r\n    normal: ArrayLike<number>;\r\n    expressID: ArrayLike<number>;\r\n    index: ArrayLike<number>;\r\n    groups: { start: number, count: number, materialIndex?: number }[];\r\n\r\n    constructor(geometry: BufferGeometry) {\r\n        this.position = geometry.attributes.position?.array || [];\r\n        this.normal = geometry.attributes.normal?.array || [];\r\n        this.expressID = geometry.attributes.expressID?.array || [];\r\n        this.index = geometry.index?.array || [];\r\n        this.groups = geometry.groups;\r\n    }\r\n}\r\n\r\nexport class GeometryReconstructor {\r\n    static new(serialized: SerializedGeometry) {\r\n        const geom = new BufferGeometry();\r\n        GeometryReconstructor.set(geom, 'expressID', new Uint32Array(serialized.expressID), 1);\r\n        GeometryReconstructor.set(geom, 'position', new Float32Array(serialized.position), 3);\r\n        GeometryReconstructor.set(geom, 'normal', new Float32Array(serialized.normal), 3);\r\n        geom.setIndex(Array.from(serialized.index));\r\n        geom.groups = serialized.groups;\r\n        return geom;\r\n    }\r\n\r\n    private static set(geom: BufferGeometry, name: string, data: ArrayLike<number>, size: number) {\r\n        if(data.length > 0) {\r\n            geom.setAttribute(name, new BufferAttribute(data, size));\r\n        }\r\n    }\r\n}","import { IFCModel } from '../../components/IFCModel';\r\nimport { Material, MeshLambertMaterial } from 'three';\r\nimport { MaterialReconstructor, SerializedMaterial } from './Material';\r\nimport { GeometryReconstructor, SerializedGeometry } from './Geometry';\r\n\r\nexport class SerializedMesh {\r\n\r\n    modelID: number;\r\n    geometry: SerializedGeometry;\r\n    materials: SerializedMaterial [] = [];\r\n\r\n    constructor(model: IFCModel) {\r\n        this.modelID = model.modelID;\r\n        this.geometry = new SerializedGeometry(model.geometry);\r\n        if (Array.isArray(model.material)) {\r\n            model.material.forEach(mat => {\r\n                this.materials.push(new SerializedMaterial(mat as MeshLambertMaterial));\r\n            });\r\n        } else {\r\n            this.materials.push(new SerializedMaterial(model.material as MeshLambertMaterial));\r\n        }\r\n    }\r\n}\r\n\r\nexport class MeshReconstructor {\r\n\r\n    static new(serialized: SerializedMesh) {\r\n        const model = new IFCModel();\r\n        model.modelID = serialized.modelID;\r\n        model.geometry = GeometryReconstructor.new(serialized.geometry);\r\n        MeshReconstructor.getMaterials(serialized, model);\r\n        return model;\r\n    }\r\n\r\n    private static getMaterials(serialized: SerializedMesh, model: IFCModel) {\r\n        model.material = [];\r\n        const mats = model.material as Material[];\r\n        serialized.materials.forEach(mat => {\r\n            mats.push(MaterialReconstructor.new(mat));\r\n        });\r\n    }\r\n}","import { GeometriesByMaterials } from '../../BaseDefinitions';\r\nimport { MaterialReconstructor, SerializedMaterial } from './Material';\r\nimport { GeometryReconstructor, SerializedGeometry } from './Geometry';\r\nimport { MeshLambertMaterial } from 'three';\r\n\r\nexport interface SerializedGeomsByMat {\r\n    [materialID: string]: {\r\n        material: SerializedMaterial,\r\n        geometries: {[expressID: number]: SerializedGeometry}\r\n    }\r\n}\r\n\r\nexport class SerializedGeomsByMaterials implements SerializedGeomsByMat {\r\n\r\n    constructor(geoms: GeometriesByMaterials) {\r\n        const matIDs = Object.keys(geoms);\r\n        matIDs.forEach(id => {\r\n            this[id] = {} as any;\r\n            this[id].material = new SerializedMaterial(geoms[id].material as MeshLambertMaterial);\r\n            this[id].geometries = {};\r\n            const expressIDs = Object.keys(geoms[id].geometries).map(key => parseInt(key));\r\n            expressIDs.forEach(expressID => {\r\n                this[id].geometries[expressID] = new SerializedGeometry(geoms[id].geometries[expressID]);\r\n            })\r\n        })\r\n    }\r\n\r\n    [materialID: string]: { material: SerializedMaterial; geometries: { [expressID: number]: SerializedGeometry; }; };\r\n}\r\n\r\nexport class GeomsByMaterialsReconstructor {\r\n    static new(serialized: SerializedGeomsByMaterials) {\r\n        const geomsByMat: GeometriesByMaterials = {}\r\n        const matIDs = Object.keys(serialized);\r\n        matIDs.forEach(id => {\r\n            geomsByMat[id] = {} as any;\r\n            geomsByMat[id].material = MaterialReconstructor.new(serialized[id].material);\r\n            geomsByMat[id].geometries = {};\r\n            const expressIDs = Object.keys(serialized[id].geometries).map(id => parseInt(id));\r\n            expressIDs.forEach(expressID => {\r\n                geomsByMat[id].geometries[expressID] = GeometryReconstructor.new(serialized[id].geometries[expressID]);\r\n            })\r\n        })\r\n        return geomsByMat;\r\n    }\r\n}","import { Vector as WebIfcVector, IfcGeometry as WebIfcIfcGeometry, FlatMesh as WebIfcFlatMesh } from 'web-ifc';\r\nimport { SerializedFlatMesh, SerializedIfcGeometry, SerializedVector } from '../BaseDefinitions';\r\nimport { Vector } from './Vector';\r\nimport { IfcGeometry } from './IfcGeometry';\r\nimport { FlatMesh } from './FlatMesh';\r\nimport { FlatMeshVector } from './FlatMeshVector';\r\nimport { IFCModel } from '../../components/IFCModel';\r\nimport { MeshReconstructor, SerializedMesh } from './Mesh';\r\nimport { GeometriesByMaterials } from '../../BaseDefinitions';\r\nimport { GeomsByMaterialsReconstructor, SerializedGeomsByMaterials } from './GeomsByMaterials';\r\n\r\nexport class Serializer {\r\n\r\n    serializeVector<T>(vector: WebIfcVector<T>) {\r\n        const size = vector.size();\r\n        const serialized: SerializedVector = { size };\r\n        for (let i = 0; i < size; i++) {\r\n            serialized[i] = vector.get(i);\r\n        }\r\n        return serialized;\r\n    }\r\n\r\n    reconstructVector(vector: SerializedVector): Vector<any> {\r\n        return new Vector(vector);\r\n    }\r\n\r\n    serializeIfcGeometry(geometry: WebIfcIfcGeometry) {\r\n        const GetVertexData = geometry.GetVertexData();\r\n        const GetVertexDataSize = geometry.GetVertexDataSize();\r\n        const GetIndexData = geometry.GetIndexData();\r\n        const GetIndexDataSize = geometry.GetIndexDataSize();\r\n        return {\r\n            GetVertexData,\r\n            GetVertexDataSize,\r\n            GetIndexData,\r\n            GetIndexDataSize\r\n        } as SerializedIfcGeometry;\r\n    }\r\n\r\n    reconstructIfcGeometry(geometry: SerializedIfcGeometry) {\r\n        return new IfcGeometry(geometry);\r\n    }\r\n\r\n    serializeFlatMesh(flatMesh: WebIfcFlatMesh) {\r\n        return {\r\n            expressID: flatMesh.expressID,\r\n            geometries: this.serializeVector(flatMesh.geometries)\r\n        } as SerializedFlatMesh;\r\n    }\r\n\r\n    reconstructFlatMesh(flatMesh: SerializedFlatMesh) {\r\n        return new FlatMesh(this, flatMesh);\r\n    }\r\n\r\n    serializeFlatMeshVector(vector: WebIfcVector<WebIfcFlatMesh>) {\r\n        const size = vector.size();\r\n        const serialized: SerializedVector = { size };\r\n        for (let i = 0; i < size; i++) {\r\n            const flatMesh = vector.get(i);\r\n            serialized[i] = this.serializeFlatMesh(flatMesh);\r\n        }\r\n        return serialized;\r\n    }\r\n\r\n    reconstructFlatMeshVector(vector: SerializedVector): WebIfcVector<WebIfcFlatMesh> {\r\n        return new FlatMeshVector(this, vector);\r\n    }\r\n\r\n    serializeIfcModel(model: IFCModel) {\r\n        return new SerializedMesh(model);\r\n    }\r\n\r\n    reconstructIfcModel(model: SerializedMesh) {\r\n        return MeshReconstructor.new(model);\r\n    }\r\n\r\n    serializeGeometriesByMaterials(geoms: GeometriesByMaterials) {\r\n        return new SerializedGeomsByMaterials(geoms);\r\n    }\r\n\r\n    reconstructGeometriesByMaterials(geoms: SerializedGeomsByMaterials) {\r\n        return GeomsByMaterialsReconstructor.new(geoms);\r\n    }\r\n}","import { PropertyAPI, PropertyManagerAPI } from '../../components/properties/BaseDefinitions';\r\nimport { IFCWorkerHandler } from '../IFCWorkerHandler';\r\nimport { WorkerActions, WorkerAPIs } from '../BaseDefinitions';\r\nimport { BufferGeometry } from 'three';\r\nimport { IdAttrName } from '../../BaseDefinitions';\r\n\r\nexport class PropertyHandler implements PropertyManagerAPI {\r\n\r\n    API = WorkerAPIs.properties;\r\n\r\n    constructor(private handler: IFCWorkerHandler) {\r\n    }\r\n\r\n    async getExpressId(geometry: BufferGeometry, faceIndex: number) {\r\n        if (!geometry.index) throw new Error('Geometry does not have index information.');\r\n        const geoIndex = geometry.index.array;\r\n        return geometry.attributes[IdAttrName].getX(geoIndex[3 * faceIndex]);\r\n    }\r\n\r\n    getAllItemsOfType(modelID: number, type: number, verbose: boolean): Promise<any[]> {\r\n        return this.handler.request(this.API, WorkerActions.getAllItemsOfType, { modelID, type, verbose });\r\n    }\r\n\r\n    getItemProperties(modelID: number, elementID: number, recursive: boolean): Promise<any> {\r\n        return this.handler.request(this.API, WorkerActions.getItemProperties, { modelID, elementID, recursive });\r\n    }\r\n\r\n    getMaterialsProperties(modelID: number, elementID: number, recursive: boolean): Promise<any[]> {\r\n        return this.handler.request(this.API, WorkerActions.getMaterialsProperties, { modelID, elementID, recursive });\r\n    }\r\n\r\n    getPropertySets(modelID: number, elementID: number, recursive: boolean): Promise<any[]> {\r\n        return this.handler.request(this.API, WorkerActions.getPropertySets, { modelID, elementID, recursive });\r\n    }\r\n\r\n    getTypeProperties(modelID: number, elementID: number, recursive: boolean): Promise<any[]> {\r\n        return this.handler.request(this.API, WorkerActions.getTypeProperties, { modelID, elementID, recursive });\r\n    }\r\n\r\n    getSpatialStructure(modelID: number, includeProperties?: boolean): Promise<any> {\r\n        return this.handler.request(this.API, WorkerActions.getSpatialStructure, { modelID, includeProperties });\r\n    }\r\n}","import { WebIfcAPI } from '../../BaseDefinitions';\r\nimport {\r\n    SerializedFlatMesh,\r\n    SerializedIfcGeometry,\r\n    SerializedVector,\r\n    WorkerActions,\r\n    WorkerAPIs\r\n} from '../BaseDefinitions';\r\nimport { FlatMesh, IfcGeometry, LoaderError, LoaderSettings, RawLineData, Vector } from 'web-ifc';\r\nimport { IFCWorkerHandler } from '../IFCWorkerHandler';\r\nimport { Serializer } from '../serializer/Serializer';\r\n\r\nexport class WebIfcHandler implements WebIfcAPI {\r\n\r\n    wasmModule: any;\r\n    API = WorkerAPIs.webIfc;\r\n\r\n    constructor(private handler: IFCWorkerHandler, private serializer: Serializer) {\r\n    }\r\n\r\n    async Init(): Promise<void> {\r\n        this.wasmModule = true;\r\n        return this.handler.request(this.API, WorkerActions.Init);\r\n    }\r\n\r\n    async OpenModel(data: string | Uint8Array, settings?: LoaderSettings): Promise<number> {\r\n        return this.handler.request(this.API, WorkerActions.OpenModel, { data, settings });\r\n    }\r\n\r\n    async CreateModel(settings?: LoaderSettings): Promise<number> {\r\n        return this.handler.request(this.API, WorkerActions.CreateModel, { settings });\r\n    }\r\n\r\n    async ExportFileAsIFC(modelID: number): Promise<Uint8Array> {\r\n        return this.handler.request(this.API, WorkerActions.ExportFileAsIFC, { modelID });\r\n    }\r\n\r\n    async GetGeometry(modelID: number, geometryExpressID: number): Promise<IfcGeometry> {\r\n        this.handler.serializeHandlers[this.handler.requestID] = (geom: SerializedIfcGeometry) => {\r\n            return this.serializer.reconstructIfcGeometry(geom);\r\n        }\r\n        return this.handler.request(this.API, WorkerActions.GetGeometry, { modelID, geometryExpressID });\r\n    }\r\n\r\n    async GetLine(modelID: number, expressID: number, flatten?: boolean): Promise<any> {\r\n        return this.handler.request(this.API, WorkerActions.GetLine, { modelID, expressID, flatten });\r\n    }\r\n\r\n    async GetAndClearErrors(modelID: number): Promise<Vector<LoaderError>> {\r\n        this.handler.serializeHandlers[this.handler.requestID] = (vector: SerializedVector) => {\r\n            return this.serializer.reconstructVector(vector);\r\n        }\r\n        return this.handler.request(this.API, WorkerActions.GetAndClearErrors, { modelID });\r\n    }\r\n\r\n    async WriteLine(modelID: number, lineObject: any): Promise<void> {\r\n        return this.handler.request(this.API, WorkerActions.WriteLine, { modelID, lineObject });\r\n    }\r\n\r\n    async FlattenLine(modelID: number, line: any): Promise<void> {\r\n        return this.handler.request(this.API, WorkerActions.FlattenLine, { modelID, line });\r\n    }\r\n\r\n    async GetRawLineData(modelID: number, expressID: number): Promise<RawLineData> {\r\n        return this.handler.request(this.API, WorkerActions.GetRawLineData, { modelID, expressID });\r\n    }\r\n\r\n    async WriteRawLineData(modelID: number, data: RawLineData): Promise<any> {\r\n        return this.handler.request(this.API, WorkerActions.WriteRawLineData, { modelID, data });\r\n    }\r\n\r\n    async GetLineIDsWithType(modelID: number, type: number): Promise<Vector<number>> {\r\n        this.handler.serializeHandlers[this.handler.requestID] = (vector: SerializedVector) => {\r\n            return this.serializer.reconstructVector(vector);\r\n        }\r\n        return this.handler.request(this.API, WorkerActions.GetLineIDsWithType, { modelID, type });\r\n    }\r\n\r\n    async GetAllLines(modelID: number): Promise<Vector<number>> {\r\n        this.handler.serializeHandlers[this.handler.requestID] = (vector: SerializedVector) => {\r\n            return this.serializer.reconstructVector(vector);\r\n        }\r\n        return this.handler.request(this.API, WorkerActions.GetAllLines, { modelID });\r\n    }\r\n\r\n    async SetGeometryTransformation(modelID: number, transformationMatrix: number[]): Promise<void> {\r\n        return this.handler.request(this.API, WorkerActions.SetGeometryTransformation, {\r\n            modelID,\r\n            transformationMatrix\r\n        });\r\n    }\r\n\r\n    async GetCoordinationMatrix(modelID: number): Promise<number[]> {\r\n        return this.handler.request(this.API, WorkerActions.GetCoordinationMatrix, { modelID });\r\n    }\r\n\r\n    async GetVertexArray(ptr: number, size: number): Promise<Float32Array> {\r\n        return this.handler.request(this.API, WorkerActions.GetVertexArray, { ptr, size });\r\n    }\r\n\r\n    async GetIndexArray(ptr: number, size: number): Promise<Uint32Array> {\r\n        return this.handler.request(this.API, WorkerActions.GetIndexArray, { ptr, size });\r\n    }\r\n\r\n    async getSubArray(heap: any, startPtr: any, sizeBytes: any): Promise<any> {\r\n        return this.handler.request(this.API, WorkerActions.getSubArray, { heap, startPtr, sizeBytes });\r\n    }\r\n\r\n    async CloseModel(modelID: number): Promise<void> {\r\n        return this.handler.request(this.API, WorkerActions.CloseModel, { modelID });\r\n    }\r\n\r\n    async StreamAllMeshes(modelID: number, meshCallback: (mesh: FlatMesh) => void): Promise<void> {\r\n        this.handler.callbackHandlers[this.handler.requestID] = {\r\n            action: meshCallback,\r\n            serializer: this.serializer.reconstructFlatMesh\r\n        };\r\n        return this.handler.request(this.API, WorkerActions.StreamAllMeshes, { modelID });\r\n    }\r\n\r\n    async StreamAllMeshesWithTypes(modelID: number, types: number[], meshCallback: (mesh: FlatMesh) => void): Promise<void> {\r\n        this.handler.callbackHandlers[this.handler.requestID] = {\r\n            action: meshCallback,\r\n            serializer: this.serializer.reconstructFlatMesh\r\n        };\r\n        return this.handler.request(this.API, WorkerActions.StreamAllMeshesWithTypes, { modelID, types });\r\n    }\r\n\r\n    async IsModelOpen(modelID: number): Promise<boolean> {\r\n        return this.handler.request(this.API, WorkerActions.IsModelOpen, { modelID });\r\n    }\r\n\r\n    async LoadAllGeometry(modelID: number): Promise<Vector<FlatMesh>> {\r\n        this.handler.serializeHandlers[this.handler.requestID] = (vector: SerializedVector) => {\r\n            return this.serializer.reconstructFlatMeshVector(vector);\r\n        }\r\n        return this.handler.request(this.API, WorkerActions.LoadAllGeometry, { modelID });\r\n    }\r\n\r\n    async GetFlatMesh(modelID: number, expressID: number): Promise<FlatMesh> {\r\n        this.handler.serializeHandlers[this.handler.requestID] = (flatMesh: SerializedFlatMesh) => {\r\n            return this.serializer.reconstructFlatMesh(flatMesh);\r\n        }\r\n        return this.handler.request(this.API, WorkerActions.GetFlatMesh, { modelID, expressID });\r\n    }\r\n\r\n    async SetWasmPath(path: string): Promise<void> {\r\n        return this.handler.request(this.API, WorkerActions.SetWasmPath, { path });\r\n    }\r\n}","import { WorkerActions, WorkerAPIs } from '../BaseDefinitions';\r\nimport { IFCWorkerHandler } from '../IFCWorkerHandler';\r\nimport { IfcState } from '../../BaseDefinitions';\r\n\r\nexport class WorkerStateHandler {\r\n    API = WorkerAPIs.workerState;\r\n    state: IfcState;\r\n\r\n    constructor(private handler: IFCWorkerHandler) {\r\n        this.state = this.handler.state;\r\n    }\r\n\r\n    async updateStateUseJson() {\r\n        const useJson = this.state.useJSON;\r\n        return this.handler.request(this.API, WorkerActions.updateStateUseJson, { useJson });\r\n    }\r\n\r\n    async updateStateWebIfcSettings() {\r\n        const webIfcSettings = this.state.webIfcSettings;\r\n        return this.handler.request(this.API, WorkerActions.updateStateWebIfcSettings, { webIfcSettings });\r\n    }\r\n\r\n    async updateModelStateTypes (modelID: number, types: any) {\r\n        return this.handler.request(this.API, WorkerActions.updateModelStateTypes, { modelID, types });\r\n    }\r\n\r\n    async updateModelStateJsonData(modelID: number, jsonData: any) {\r\n        return this.handler.request(this.API, WorkerActions.updateModelStateJsonData, { modelID, jsonData });\r\n    }\r\n\r\n    async loadJsonDataFromWorker(modelID: number, path: string) {\r\n        return this.handler.request(this.API, WorkerActions.loadJsonDataFromWorker, { modelID, path });\r\n    }\r\n}","export enum DBOperation {\r\n    transferIfcModel,\r\n    transferIndividualItems\r\n}\r\n\r\nexport class IndexedDatabase {\r\n    save(item: any, id: DBOperation) {\r\n        const open = IndexedDatabase.openOrCreateDB(id);\r\n        this.createSchema(open, id)\r\n        return new Promise<any>((resolve, reject) => {\r\n            open.onsuccess = () => this.saveItem(item, open, id, resolve);\r\n        });\r\n    }\r\n\r\n    async load(id: number) {\r\n        const open = IndexedDatabase.openOrCreateDB(id);\r\n        return new Promise<any>((resolve, reject) => {\r\n            open.onsuccess = () => this.loadItem(open, id, resolve);\r\n        })\r\n    }\r\n\r\n    private createSchema(open: IDBOpenDBRequest, id: DBOperation) {\r\n        open.onupgradeneeded = function () {\r\n            const db = open.result;\r\n            db.createObjectStore(id.toString(), {keyPath: \"id\"});\r\n        };\r\n    }\r\n\r\n    private saveItem(item: any, open: IDBOpenDBRequest, id: DBOperation, resolve: (value: any) => void ) {\r\n        const {db, tx, store} = IndexedDatabase.getDBItems(open, id);\r\n        item.id = id;\r\n        store.put(item);\r\n        tx.oncomplete = () => IndexedDatabase.closeDB(db, tx, resolve);\r\n    }\r\n\r\n    private loadItem(open: IDBOpenDBRequest, id: DBOperation, resolve: (value: any) => void ) {\r\n        const {db, tx, store} = IndexedDatabase.getDBItems(open, id);\r\n        const item = store.get(id);\r\n        const callback = () => {\r\n            delete item.result.id;\r\n            resolve(item.result)\r\n        };\r\n        tx.oncomplete = () => IndexedDatabase.closeDB(db, tx, callback);\r\n    }\r\n\r\n    private static getDBItems(open: IDBOpenDBRequest, id: DBOperation) {\r\n        const db = open.result;\r\n        const tx = db.transaction(id.toString(), \"readwrite\");\r\n        const store = tx.objectStore(id.toString());\r\n        return {db, tx, store};\r\n    }\r\n\r\n    private static openOrCreateDB(id: DBOperation) {\r\n        return indexedDB.open(id.toString(), 1);\r\n    }\r\n\r\n    private static closeDB(db: IDBDatabase, tx: IDBTransaction, resolve: (value: any) => void) {\r\n        db.close();\r\n        resolve(\"success\");\r\n    }\r\n}","import {OptionalCategories, ParserAPI, ParserProgress } from '../../components/IFCParser';\r\nimport { WorkerActions, WorkerAPIs } from '../BaseDefinitions';\r\nimport { IFCWorkerHandler } from '../IFCWorkerHandler';\r\nimport { IFCModel } from '../../components/IFCModel';\r\nimport { Serializer } from '../serializer/Serializer';\r\nimport { ParserResult } from '../workers/ParserWorker';\r\nimport { BvhManager } from '../../components/BvhManager';\r\nimport { DBOperation, IndexedDatabase } from '../../indexedDB/IndexedDatabase';\r\n\r\nexport class ParserHandler implements ParserAPI {\r\n\r\n    API = WorkerAPIs.parser;\r\n\r\n    constructor(private handler: IFCWorkerHandler,\r\n                private serializer: Serializer,\r\n                private BVH: BvhManager,\r\n                private IDB: IndexedDatabase) {\r\n    }\r\n\r\n    async setupOptionalCategories(config: OptionalCategories) {\r\n        return this.handler.request(this.API, WorkerActions.setupOptionalCategories, {config});\r\n    }\r\n\r\n    async parse(buffer: any): Promise<IFCModel> {\r\n        this.handler.onprogressHandlers[this.handler.requestID] = (progress: ParserProgress) => {\r\n            if (this.handler.state.onProgress) this.handler.state.onProgress(progress);\r\n        };\r\n        this.handler.serializeHandlers[this.handler.requestID] = async (result: ParserResult) => {\r\n            this.updateState(result.modelID);\r\n            await this.getItems(result.modelID);\r\n            return this.getModel();\r\n        };\r\n        return this.handler.request(this.API, WorkerActions.parse, {buffer});\r\n    }\r\n\r\n    getAndClearErrors(_modelId: number): void {\r\n    }\r\n\r\n    private updateState(modelID: number) {\r\n        this.handler.state.models[modelID] = {\r\n            modelID: modelID,\r\n            mesh: {} as any,\r\n            items: {},\r\n            types: {},\r\n            jsonData: {}\r\n        };\r\n    }\r\n\r\n    private async getItems(modelID: number) {\r\n        const items = await this.IDB.load(DBOperation.transferIndividualItems);\r\n        this.handler.state.models[modelID].items = this.serializer.reconstructGeometriesByMaterials(items);\r\n    }\r\n\r\n    private async getModel() {\r\n        const serializedModel = await this.IDB.load(DBOperation.transferIfcModel);\r\n        const model = this.serializer.reconstructIfcModel(serializedModel);\r\n        this.BVH.applyThreeMeshBVH(model.geometry);\r\n        this.handler.state.models[model.modelID].mesh = model;\r\n        return model;\r\n    }\r\n}","import {IfcEventData, WorkerActions, WorkerAPIs} from './BaseDefinitions';\r\nimport {Serializer} from './serializer/Serializer';\r\nimport {PropertyHandler} from './handlers/PropertyHandler';\r\nimport {WebIfcHandler} from './handlers/WebIfcHandler';\r\nimport {IfcState} from '../BaseDefinitions';\r\nimport {WorkerStateHandler} from './handlers/WorkerStateHandler';\r\nimport {ParserHandler} from './handlers/ParserHandler';\r\nimport {BVH} from 'three/examples/jsm/loaders/BVHLoader';\r\nimport {BvhManager} from '../components/BvhManager';\r\nimport {IndexedDatabase} from \"../indexedDB/IndexedDatabase\";\r\n\r\nexport class IFCWorkerHandler {\r\n\r\n    requestID = 0;\r\n    rejectHandlers: any = {};\r\n    resolveHandlers: any = {};\r\n    serializeHandlers: any = {};\r\n    callbackHandlers: { [id: number]: { action: any, serializer: any } } = {};\r\n    onprogressHandlers: any = {};\r\n\r\n    readonly IDB: IndexedDatabase;\r\n    readonly workerState: WorkerStateHandler;\r\n    readonly webIfc: WebIfcHandler;\r\n    readonly properties: PropertyHandler;\r\n    readonly parser: ParserHandler;\r\n\r\n    private ifcWorker: Worker;\r\n    private readonly serializer = new Serializer();\r\n    private readonly workerPath: string;\r\n\r\n    constructor(public state: IfcState, private BVH: BvhManager) {\r\n        this.IDB = new IndexedDatabase();\r\n        this.workerPath = this.state.worker.path;\r\n        this.ifcWorker = new Worker(this.workerPath);\r\n        this.ifcWorker.onmessage = (data: any) => this.handleResponse(data);\r\n        this.properties = new PropertyHandler(this);\r\n        this.parser = new ParserHandler(this, this.serializer, this.BVH, this.IDB);\r\n        this.webIfc = new WebIfcHandler(this, this.serializer);\r\n        this.workerState = new WorkerStateHandler(this);\r\n    }\r\n\r\n    request(worker: WorkerAPIs, action: WorkerActions, args?: any) {\r\n        const data: IfcEventData = {worker, action, args, id: this.requestID, result: undefined, onProgress: false};\r\n\r\n        return new Promise<any>((resolve, reject) => {\r\n            this.resolveHandlers[this.requestID] = resolve;\r\n            this.rejectHandlers[this.requestID] = reject;\r\n            this.requestID++;\r\n            this.ifcWorker.postMessage(data);\r\n        });\r\n    }\r\n\r\n    async Close(): Promise<void> {\r\n        await this.request(WorkerAPIs.webIfc, WorkerActions.Close);\r\n    }\r\n\r\n    private handleResponse(event: MessageEvent) {\r\n        const data = event.data as IfcEventData;\r\n        if (data.onProgress) {\r\n            this.resolveOnProgress(data);\r\n            return;\r\n        }\r\n        this.callHandlers(data);\r\n        delete this.resolveHandlers[data.id];\r\n        delete this.rejectHandlers[data.id];\r\n        delete this.onprogressHandlers[data.id];\r\n    }\r\n\r\n    private callHandlers(data: IfcEventData) {\r\n        try {\r\n            this.resolveSerializations(data);\r\n            this.resolveCallbacks(data);\r\n            this.resolveHandlers[data.id](data.result);\r\n        } catch (error) {\r\n            this.rejectHandlers[data.id](error);\r\n        }\r\n    }\r\n\r\n    private resolveOnProgress(data: IfcEventData) {\r\n        if (this.onprogressHandlers[data.id]) {\r\n            data.result = this.onprogressHandlers[data.id](data.result);\r\n        }\r\n    }\r\n\r\n    private resolveSerializations(data: IfcEventData) {\r\n        if (this.serializeHandlers[data.id]) {\r\n            data.result = this.serializeHandlers[data.id](data.result);\r\n            delete this.serializeHandlers[data.id];\r\n        }\r\n    }\r\n\r\n    private resolveCallbacks(data: IfcEventData) {\r\n        if (this.callbackHandlers[data.id]) {\r\n            let callbackParameter = data.result;\r\n            if (this.callbackHandlers[data.id].serializer) {\r\n                callbackParameter = this.callbackHandlers[data.id].serializer(data.result);\r\n            }\r\n            this.callbackHandlers[data.id].action(callbackParameter);\r\n        }\r\n    }\r\n}","import * as WebIFC from 'web-ifc';\r\nimport {IFCParser, ParserAPI, ParserProgress} from './IFCParser';\r\nimport { SubsetManager } from './SubsetManager';\r\nimport { PropertyManager } from './properties/PropertyManager';\r\nimport { IfcElements } from './IFCElementsMap';\r\nimport { TypeManager } from './TypeManager';\r\nimport { HighlightConfigOfModel, IfcState, JSONObject } from '../BaseDefinitions';\r\nimport { BufferGeometry, Material, Object3D, Scene } from 'three';\r\nimport { IFCModel } from './IFCModel';\r\nimport { BvhManager } from './BvhManager';\r\nimport { ItemsHider } from './ItemsHider';\r\nimport { LoaderSettings } from 'web-ifc';\r\nimport { MemoryCleaner } from './MemoryCleaner';\r\nimport { IFCWorkerHandler } from '../web-workers/IFCWorkerHandler';\r\nimport { PropertyManagerAPI } from './properties/BaseDefinitions';\r\n\r\n/**\r\n * Contains all the logic to work with the loaded IFC files (select, edit, etc).\r\n */\r\nexport class IFCManager {\r\n    private state: IfcState = {\r\n        models: [],\r\n        api: new WebIFC.IfcAPI(),\r\n        useJSON: false,\r\n        worker: { active: false, path: '' }\r\n    };\r\n\r\n    private BVH = new BvhManager();\r\n    parser: ParserAPI = new IFCParser(this.state, this.BVH);\r\n    private subsets = new SubsetManager(this.state, this.BVH);\r\n    private properties: PropertyManagerAPI = new PropertyManager(this.state);\r\n    private types = new TypeManager(this.state);\r\n    private hider = new ItemsHider(this.state);\r\n    private cleaner = new MemoryCleaner(this.state);\r\n    private worker?: IFCWorkerHandler;\r\n\r\n    async parse(buffer: ArrayBuffer) {\r\n        const model = await this.parser.parse(buffer) as IFCModel;\r\n        model.setIFCManager(this);\r\n        this.state.useJSON ? await this.disposeMemory() : await this.types.getAllTypes(this.worker);\r\n        this.hider.processCoordinates(model.modelID);\r\n        return model;\r\n    }\r\n\r\n    /**\r\n     * Sets a callback function that is called every 10% of IFC loaded.\r\n     * @onProgress callback function\r\n     */\r\n    setOnProgress(onProgress: (event: ParserProgress) => void) {\r\n        this.state.onProgress = onProgress;\r\n    }\r\n\r\n    /**\r\n     * For internal use of IFC.js dev team and testers\r\n     */\r\n    getAndClearErrors(modelID: number) {\r\n        return this.parser.getAndClearErrors(modelID);\r\n    }\r\n\r\n    /**\r\n     * Sets the relative path of web-ifc.wasm file in the project.\r\n     * Beware: you **must** serve this file in your page; this means\r\n     * that you have to copy this files from *node_modules/web-ifc*\r\n     * to your deployment directory.\r\n     *\r\n     * If you don't use this methods,\r\n     * IFC.js assumes that you are serving it in the root directory.\r\n     *\r\n     * Example if web-ifc.wasm is in dist/wasmDir:\r\n     * `ifcLoader.setWasmPath(\"dist/wasmDir/\");`\r\n     *\r\n     * @path Relative path to web-ifc.wasm.\r\n     */\r\n    async setWasmPath(path: string) {\r\n        this.state.api.SetWasmPath(path);\r\n    }\r\n\r\n    /**\r\n     * Applies a configuration for [web-ifc](https://ifcjs.github.io/info/docs/Guide/web-ifc/Introduction).\r\n     */\r\n    async applyWebIfcConfig(settings: LoaderSettings) {\r\n        this.state.webIfcSettings = settings;\r\n        if(this.state.worker.active && this.worker) {\r\n            await this.worker.workerState.updateStateWebIfcSettings();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Uses web workers, making the loader non-blocking.\r\n     * @active Wether to use web workers or not.\r\n     * @path Relative path to the web worker file. Necessary if active=true.\r\n     */\r\n    async useWebWorkers(active: boolean, path?: string) {\r\n        if (this.state.worker.active === active) return;\r\n        // @ts-ignore\r\n        this.state.api = null;\r\n        if (active) {\r\n            if (!path) throw new Error('You must provide a path to the web worker.');\r\n            this.state.worker.active = active;\r\n            this.state.worker.path = path;\r\n            await this.initializeWorkers();\r\n        } else {\r\n            this.state.api = new WebIFC.IfcAPI();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Enables the JSON mode (which consumes way less memory) and eliminates the WASM data.\r\n     * Only use this in the following scenarios:\r\n     * - If you don't need to access the properties of the IFC\r\n     * - If you will provide the properties as JSON.\r\n     * @useJSON: Wether to use the JSON mode or not.\r\n     */\r\n    async useJSONData(useJSON = true) {\r\n        this.state.useJSON = useJSON;\r\n        if (useJSON) {\r\n            await this.worker?.workerState.updateStateUseJson();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Adds the properties of a model as JSON data. If you are using web workers, use\r\n     * `loadJsonDataFromWorker()` instead to avoid overheads.\r\n     * @modelID ID of the IFC model.\r\n     * @data: data as an object where the keys are the expressIDs and the values the properties.\r\n     */\r\n    async addModelJSONData(modelID: number, data: { [id: number]: JSONObject }) {\r\n        const model = this.state.models[modelID];\r\n        if (!model) throw new Error('The specified model for the JSON data does not exist');\r\n        if (this.state.worker.active) {\r\n            await this.worker?.workerState.updateModelStateJsonData(modelID, data);\r\n        } else {\r\n            model.jsonData = data;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Loads the data of an IFC model from a JSON file directly from a web worker. If you are not using\r\n     * web workers, use `addModelJSONData()` instead.\r\n     * @modelID ID of the IFC model.\r\n     * @path: the path to the JSON file **relative to the web worker file**.\r\n     */\r\n    async loadJsonDataFromWorker(modelID: number, path: string) {\r\n        if (this.state.worker.active) {\r\n            await this.worker?.workerState.loadJsonDataFromWorker(modelID, path);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Completely releases the WASM memory, thus drastically decreasing the memory use of the app.\r\n     * Only use this in the following scenarios:\r\n     * - If you don't need to access the properties of the IFC\r\n     * - If you will provide the properties as JSON.\r\n     */\r\n    async disposeMemory() {\r\n        if (this.state.worker.active) {\r\n            await this.worker?.Close();\r\n        } else {\r\n            // @ts-ignore\r\n            this.state.api = null;\r\n            this.state.api = new WebIFC.IfcAPI();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Makes object picking a lot faster\r\n     * Courtesy of gkjohnson's [work](https://github.com/gkjohnson/three-mesh-bvh).\r\n     * Import these objects from his library and pass them as arguments. IFC.js takes care of the rest!\r\n     */\r\n    setupThreeMeshBVH(computeBoundsTree: any, disposeBoundsTree: any, acceleratedRaycast: any) {\r\n        this.BVH.initializeMeshBVH(computeBoundsTree, disposeBoundsTree, acceleratedRaycast);\r\n    }\r\n\r\n    /**\r\n     * Closes the specified model and deletes it from the [scene](https://threejs.org/docs/#api/en/scenes/Scene).\r\n     * @modelID ID of the IFC model.\r\n     * @scene Scene where the model is (if it's located in a scene).\r\n     */\r\n    close(modelID: number, scene?: Scene) {\r\n        this.state.api.CloseModel(modelID);\r\n        if (scene) scene.remove(this.state.models[modelID].mesh);\r\n        delete this.state.models[modelID];\r\n    }\r\n\r\n    /**\r\n     * Gets the **Express ID** to which the given face belongs.\r\n     * This ID uniquely identifies this entity within this IFC file.\r\n     * @geometry The geometry of the IFC model.\r\n     * @faceIndex The index of the face of a geometry.You can easily get this index using the [Raycaster](https://threejs.org/docs/#api/en/core/Raycaster).\r\n     */\r\n    getExpressId(geometry: BufferGeometry, faceIndex: number) {\r\n        return this.properties.getExpressId(geometry, faceIndex);\r\n    }\r\n\r\n    /**\r\n     * Returns all items of the specified type. You can import\r\n     * the types from *web-ifc*.\r\n     *\r\n     * Example to get all the standard walls of a project:\r\n     * ```js\r\n     * import { IFCWALLSTANDARDCASE } from 'web-ifc';\r\n     * const walls = ifcLoader.getAllItemsOfType(IFCWALLSTANDARDCASE);\r\n     * ```\r\n     * @modelID ID of the IFC model.\r\n     * @type type of IFC items to get.\r\n     * @verbose If false (default), this only gets IDs. If true, this also gets the native properties of all the fetched items.\r\n     */\r\n    getAllItemsOfType(modelID: number, type: number, verbose: boolean) {\r\n        return this.properties.getAllItemsOfType(modelID, type, verbose);\r\n    }\r\n\r\n    /**\r\n     * Gets the native properties of the given element.\r\n     * @modelID ID of the IFC model.\r\n     * @id Express ID of the element.\r\n     * @recursive Wether you want to get the information of the referenced elements recursively.\r\n     */\r\n    getItemProperties(modelID: number, id: number, recursive = false) {\r\n        return this.properties.getItemProperties(modelID, id, recursive);\r\n    }\r\n\r\n    /**\r\n     * Gets the [property sets](https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/schema/ifckernel/lexical/ifcpropertyset.htm)\r\n     * assigned to the given element.\r\n     * @modelID ID of the IFC model.\r\n     * @id Express ID of the element.\r\n     * @recursive If true, this gets the native properties of the referenced elements recursively.\r\n     */\r\n    getPropertySets(modelID: number, id: number, recursive = false) {\r\n        return this.properties.getPropertySets(modelID, id, recursive);\r\n    }\r\n\r\n    /**\r\n     * Gets the properties of the type assigned to the element.\r\n     * For example, if applied to a wall (IfcWall), this would get back the information\r\n     * contained in the IfcWallType assigned to it, if any.\r\n     * @modelID ID of the IFC model.\r\n     * @id Express ID of the element.\r\n     * @recursive If true, this gets the native properties of the referenced elements recursively.\r\n     */\r\n    getTypeProperties(modelID: number, id: number, recursive = false) {\r\n        return this.properties.getTypeProperties(modelID, id, recursive);\r\n    }\r\n\r\n    /**\r\n     * Gets the materials assigned to the given element.\r\n     * @modelID ID of the IFC model.\r\n     * @id Express ID of the element.\r\n     * @recursive If true, this gets the native properties of the referenced elements recursively.\r\n     */\r\n    getMaterialsProperties(modelID: number, id: number, recursive = false) {\r\n        return this.properties.getMaterialsProperties(modelID, id, recursive);\r\n    }\r\n\r\n    /**\r\n     * Gets the ifc type of the specified item.\r\n     * @modelID ID of the IFC model.\r\n     * @id Express ID of the element.\r\n     */\r\n    getIfcType(modelID: number, id: number) {\r\n        const typeID = this.state.models[modelID].types[id];\r\n        return IfcElements[typeID];\r\n    }\r\n\r\n    /**\r\n     * Gets the spatial structure of the project. The\r\n     * [spatial structure](https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/schema/ifcproductextension/lexical/ifcspatialstructureelement.htm)\r\n     * is the hierarchical structure that organizes every IFC project (all physical items\r\n     * are referenced to an element of the spatial structure). It is formed by\r\n     * one IfcProject that contains one or more IfcSites, that contain one or more\r\n     * IfcBuildings, that contain one or more IfcBuildingStoreys, that contain\r\n     * one or more IfcSpaces.\r\n     * @modelID ID of the IFC model.\r\n     */\r\n    getSpatialStructure(modelID: number, includeProperties?: boolean) {\r\n        return this.properties.getSpatialStructure(modelID, includeProperties);\r\n    }\r\n\r\n    /**\r\n     * Gets the mesh of the subset with the specified [material](https://threejs.org/docs/#api/en/materials/Material).\r\n     * If no material is given, this returns the subset with the original materials.\r\n     * @modelID ID of the IFC model.\r\n     * @material Material assigned to the subset (if any).\r\n     * @customId Optional identifier of the subset.\r\n     */\r\n    getSubset(modelID: number, material?: Material, customId?: string) {\r\n        return this.subsets.getSubset(modelID, material, customId);\r\n    }\r\n\r\n    /**\r\n     * Removes the specified subset.\r\n     * @modelID ID of the IFC model.\r\n     * @parent The parent where the subset is (can be any `THREE.Object3D`).\r\n     * @material Material assigned to the subset, if any.\r\n     */\r\n    removeSubset(modelID: number, parent?: Object3D, material?: Material, customId?: string) {\r\n        this.subsets.removeSubset(modelID, parent, material, customId);\r\n    }\r\n\r\n    /**\r\n     * Creates a new geometric subset.\r\n     * @config A configuration object with the following options:\r\n     * - **scene**: `THREE.Object3D` where the model is located.\r\n     * - **modelID**: ID of the model.\r\n     * - **ids**: Express IDs of the items of the model that will conform the subset.\r\n     * - **removePrevious**: wether to remove the previous subset of this model with this material.\r\n     * - **material**: (optional) wether to apply a material to the subset\r\n     */\r\n    createSubset(config: HighlightConfigOfModel) {\r\n        return this.subsets.createSubset(config);\r\n    }\r\n\r\n    /**\r\n     * Hides the selected items in the specified model\r\n     * @modelID ID of the IFC model.\r\n     * @ids Express ID of the elements.\r\n     */\r\n    hideItems(modelID: number, ids: number[]) {\r\n        this.hider.hideItems(modelID, ids);\r\n    }\r\n\r\n    /**\r\n     * Hides all the items of the specified model\r\n     * @modelID ID of the IFC model.\r\n     */\r\n    hideAllItems(modelID: number) {\r\n        this.hider.hideAllItems(modelID);\r\n    }\r\n\r\n    /**\r\n     * Shows all the items of the specified model\r\n     * @modelID ID of the IFC model.\r\n     * @ids Express ID of the elements.\r\n     */\r\n    showItems(modelID: number, ids: number[]) {\r\n        this.hider.showItems(modelID, ids);\r\n    }\r\n\r\n    /**\r\n     * Shows all the items of the specified model\r\n     * @modelID ID of the IFC model.\r\n     */\r\n    showAllItems(modelID: number) {\r\n        this.hider.showAllItems(modelID);\r\n    }\r\n\r\n    /**\r\n     * Returns the underlying web-ifc API.\r\n     */\r\n    get ifcAPI() {\r\n        return this.state.api;\r\n    }\r\n\r\n    /**\r\n     * Deletes all data, releasing all memory\r\n     * Work in progress: this doesn't remove all the memory\r\n     * Page reloading recommended to avoid heap overload\r\n     */\r\n    releaseAllMemory() {\r\n        this.subsets.dispose();\r\n        this.hider.dispose();\r\n        this.cleaner.releaseAllModels();\r\n        // @ts-ignore\r\n        this.state.api = null;\r\n        // @ts-ignore\r\n        this.state.models = null;\r\n        // @ts-ignore\r\n        this.state = null;\r\n    }\r\n\r\n    private async initializeWorkers() {\r\n        this.worker = new IFCWorkerHandler(this.state, this.BVH);\r\n        this.state.api = this.worker.webIfc;\r\n        this.properties = this.worker.properties;\r\n        this.parser = this.worker.parser;\r\n        await this.worker.workerState.updateStateUseJson();\r\n        await this.worker.workerState.updateStateWebIfcSettings();\r\n    }\r\n}\r\n","import { IFCManager } from './IFC/components/IFCManager';\r\nimport { FileLoader, Loader, LoadingManager } from 'three';\r\nimport { IFCModel } from './IFC/components/IFCModel';\r\n\r\nclass IFCLoader extends Loader {\r\n    ifcManager: IFCManager;\r\n    private onProgress?: (event: ProgressEvent) => void;\r\n\r\n    constructor(manager?: LoadingManager) {\r\n        super(manager);\r\n        this.ifcManager = new IFCManager();\r\n    }\r\n\r\n    load(\r\n        url: any,\r\n        onLoad: (ifc: IFCModel) => void,\r\n        onProgress?: (event: ProgressEvent) => void,\r\n        onError?: (event: ErrorEvent) => void\r\n    ) {\r\n        const scope = this;\r\n\r\n        const loader = new FileLoader(scope.manager);\r\n        this.onProgress = onProgress;\r\n        loader.setPath(scope.path);\r\n        loader.setResponseType('arraybuffer');\r\n        loader.setRequestHeader(scope.requestHeader);\r\n        loader.setWithCredentials(scope.withCredentials);\r\n        loader.load(\r\n            url,\r\n            async function (buffer) {\r\n                try {\r\n                    if (typeof buffer == 'string') {\r\n                        throw new Error('IFC files must be given as a buffer!');\r\n                    }\r\n                    onLoad(await scope.parse(buffer));\r\n                } catch (e: any) {\r\n                    if (onError) {\r\n                        onError(e);\r\n                    } else {\r\n                        console.error(e);\r\n                    }\r\n\r\n                    scope.manager.itemError(url);\r\n                }\r\n            },\r\n            onProgress,\r\n            onError\r\n        );\r\n    }\r\n\r\n    parse(buffer: ArrayBuffer) {\r\n        return this.ifcManager.parse(buffer);\r\n    }\r\n}\r\n\r\nexport { IFCLoader };\r\n"],"names":[],"mappings":"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"}